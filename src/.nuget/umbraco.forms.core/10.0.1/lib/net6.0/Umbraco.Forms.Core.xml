<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Umbraco.Forms.Core</name>
    </assembly>
    <members>
        <member name="T:Umbraco.Forms.Core.Attributes.Setting">
            <summary>
            Attribute used to associate presentation and other associated values with a field.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Attributes.Setting.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Umbraco.Forms.Core.Attributes.Setting"/> class.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Attributes.Setting.Name">
            <summary>
            Gets or sets the name of the field setting.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Attributes.Setting.Description">
            <summary>
            Gets or sets the description of the field setting.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Attributes.Setting.PreValues">
            <summary>
            Gets or sets the prevalues for the field setting as a comma separated string.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Attributes.Setting.View">
            <summary>
            Gets or sets the view for the field setting.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Attributes.Setting.Alias">
            <summary>
            Gets or sets the alias of the field setting.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Attributes.Setting.DisplayOrder">
            <summary>
            Gets or sets the setting's display order.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Attributes.Setting.SupportsPlaceholders">
            <summary>
            Gets or sets a value indicating whether the setting's value accepts placeholders and should have them replaced when the form is rendered.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Attributes.Setting.GetPreValues">
            <summary>
            Retrieves the <see cref="P:Umbraco.Forms.Core.Attributes.Setting.PreValues"/> as a <see cref="!:List&lt;string&gt;"/>.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Attributes.Setting.GetSettingView">
            <summary>
            Retreives the fully qualified path to the view <see cref="P:Umbraco.Forms.Core.Attributes.Setting.View"/>.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Attributes.ValidateFormsAntiForgeryTokenAttribute">
            <summary>
            Attribute indicating anti-forgery token checks should be applied to methods where it is used.
            </summary>
            <remarks>
            Delegates to framework implementation if enabled in configuraiton.
            </remarks>
        </member>
        <member name="T:Umbraco.Forms.Core.Cache.CacheKeys">
            <summary>
            Defines cache key constants.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Cache.CacheKeys.FoldersDbCacheRefresherId">
            <summary>
            Cache refresher key for folders stored in the database as a string.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Cache.CacheKeys.FoldersDbCacheRefresherGuid">
            <summary>
            Cache refresher key for folders stored in the database as a Guid.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Cache.CacheKeys.FormsDbCacheRefresherId">
            <summary>
            Cache refresher key for forms stored in the database as a string.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Cache.CacheKeys.FormsDbCacheRefresherGuid">
            <summary>
            Cache refresher key for forms stored in the database as a Guid.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Cache.CacheKeys.WorkDbflowCacheRefresherId">
            <summary>
            Cache refresher key for workflows stored in the database as a string.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Cache.CacheKeys.WorkflowDbCacheRefresherGuid">
            <summary>
            Cache refresher key for workflows stored in the database as a Guid.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Cache.CacheKeys.PreValueDbCacheRefresherId">
            <summary>
            Cache refresher key for prevalues stored in the database as a string.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Cache.CacheKeys.PreValueDbCacheRefresherGuid">
            <summary>
            Cache refresher key for prevalues stored in the database as a Guid.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Cache.CacheKeys.DataSourceDbCacheRefresherId">
            <summary>
            Cache refresher key for datasources stored in the database as a string.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Cache.CacheKeys.DataSourceDbCacheRefresherGuid">
            <summary>
            Cache refresher key for datasources stored in the database as a Guid.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Cache.CacheKeys.FormStorageAllFormsKey">
            <summary>
            Cache key for all forms.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Cache.CacheKeys.FolderPrefix">
            <summary>
            Cache key prefix for folders.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Cache.CacheKeys.PreValuePrefix">
            <summary>
            Cache key prefix for prevalues.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Cache.CacheKeys.DataSourcePrefix">
            <summary>
            Cache key prefix for datasources.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Cache.CacheKeys.WorkflowPrefix">
            <summary>
            Cache key prefix for workflows.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Cache.CacheKeys.FormsVersion">
            <summary>
            Cache key for the Forms package version.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Cache.CacheKeys.FormsSettingsAll">
            <summary>
            Cache key for the Forms package settings.
            </summary>
            <remarks>
            The entire Forms configuration XML is stored in here
            </remarks>
        </member>
        <member name="M:Umbraco.Forms.Core.Cache.CacheKeys.GetMemberCacheKey(System.Guid)">
            <summary>
            Retrieves the cache key for a member.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Cache.CacheKeys.GetMemberValuesCacheKey(System.Guid)">
            <summary>
            Retrieves the cache key for a member's profile.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Cache.DataSourceCacheRefresher">
            <summary>
            Cache refresher for datasources stored in the database.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Cache.DataSourceCacheRefresher.#ctor(Umbraco.Cms.Core.Cache.AppCaches,Umbraco.Cms.Core.Serialization.IJsonSerializer,Umbraco.Cms.Core.Events.IEventAggregator,Umbraco.Cms.Core.Cache.ICacheRefresherNotificationFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Umbraco.Forms.Core.Cache.DataSourceCacheRefresher"/> class.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Cache.DataSourceCacheRefresher.RefresherUniqueId">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Cache.DataSourceCacheRefresher.Name">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Core.Cache.DataSourceCacheRefresher.RefreshAll">
            <inheritdoc/>
            <remarks>
            Used to clear all runtime cache for datasources.
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Umbraco.Forms.Core.Cache.DataSourceCacheRefresher.Refresh(System.String)" -->
        <member name="T:Umbraco.Forms.Core.Cache.FolderCacheRefresher">
            <summary>
            Cache refresher for form folders stored in the database.
            </summary>
            <remarks>
            Used to distribute forms data between servers when load balancing.
            </remarks>
        </member>
        <member name="M:Umbraco.Forms.Core.Cache.FolderCacheRefresher.#ctor(Umbraco.Cms.Core.Cache.AppCaches,Umbraco.Cms.Core.Serialization.IJsonSerializer,Umbraco.Cms.Core.Events.IEventAggregator,Umbraco.Cms.Core.Cache.ICacheRefresherNotificationFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Umbraco.Forms.Core.Cache.FolderCacheRefresher"/> class.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Cache.FolderCacheRefresher.RefresherUniqueId">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Cache.FolderCacheRefresher.Name">
            <inheritdoc/>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Umbraco.Forms.Core.Cache.FolderCacheRefresher.Refresh(System.String)" -->
        <member name="T:Umbraco.Forms.Core.Cache.FormCacheRefresher">
            <summary>
            Cache refresher for forms stored in the database.
            </summary>
            <remarks>
            Used to distribute forms data between servers when load balancing.
            </remarks>
        </member>
        <member name="M:Umbraco.Forms.Core.Cache.FormCacheRefresher.#ctor(Umbraco.Cms.Core.Cache.AppCaches,Umbraco.Cms.Core.Serialization.IJsonSerializer,Umbraco.Cms.Core.Events.IEventAggregator,Umbraco.Cms.Core.Cache.ICacheRefresherNotificationFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Umbraco.Forms.Core.Cache.FormCacheRefresher"/> class.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Cache.FormCacheRefresher.RefresherUniqueId">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Cache.FormCacheRefresher.Name">
            <inheritdoc/>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Umbraco.Forms.Core.Cache.FormCacheRefresher.Refresh(System.String)" -->
        <member name="T:Umbraco.Forms.Core.Cache.FormsDistributedCache">
            <summary>
            Implementation of <see cref="T:Umbraco.Forms.Core.Cache.IFormsDistributedCache"/> providing cache refresh operations for forms.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Cache.FormsDistributedCache.RefreshFolder(Umbraco.Forms.Core.Models.Folder)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco.Forms.Core.Cache.FormsDistributedCache.RemoveFolder(Umbraco.Forms.Core.Models.Folder)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco.Forms.Core.Cache.FormsDistributedCache.RefreshForms(Umbraco.Forms.Core.Models.Form)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco.Forms.Core.Cache.FormsDistributedCache.RemoveForms(Umbraco.Forms.Core.Models.Form)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco.Forms.Core.Cache.FormsDistributedCache.RefreshWorkflow(Umbraco.Forms.Core.Interfaces.IWorkflow)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco.Forms.Core.Cache.FormsDistributedCache.RemoveWorkflow(Umbraco.Forms.Core.Interfaces.IWorkflow)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco.Forms.Core.Cache.FormsDistributedCache.RefreshAllPreValueRuntime">
            <inheritdoc />
        </member>
        <member name="M:Umbraco.Forms.Core.Cache.FormsDistributedCache.RefreshPreValue(Umbraco.Forms.Core.Interfaces.IFieldPreValueSource)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco.Forms.Core.Cache.FormsDistributedCache.RemovePreValue(Umbraco.Forms.Core.Interfaces.IFieldPreValueSource)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco.Forms.Core.Cache.FormsDistributedCache.RefreshDataSource(Umbraco.Forms.Core.FormDataSource)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco.Forms.Core.Cache.FormsDistributedCache.RemoveDataSource(Umbraco.Forms.Core.FormDataSource)">
            <inheritdoc />
        </member>
        <member name="T:Umbraco.Forms.Core.Cache.IFormsDistributedCache">
            <summary>
            Defines cache refresh operations for forms.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Cache.IFormsDistributedCache.RefreshFolder(Umbraco.Forms.Core.Models.Folder)">
            <summary>
            Refreshes the cache amongst servers for a form.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Cache.IFormsDistributedCache.RemoveFolder(Umbraco.Forms.Core.Models.Folder)">
            <summary>
            Deletes the cache amongst servers for a form.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Cache.IFormsDistributedCache.RefreshForms(Umbraco.Forms.Core.Models.Form)">
            <summary>
            Refreshes the cache amongst servers for a form.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Cache.IFormsDistributedCache.RemoveForms(Umbraco.Forms.Core.Models.Form)">
            <summary>
            Deletes the cache amongst servers for a form.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Cache.IFormsDistributedCache.RefreshAllPreValueRuntime">
            <summary>
            Called to clear all runtime caching for prevalues.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Cache.IFormsDistributedCache.RefreshPreValue(Umbraco.Forms.Core.Interfaces.IFieldPreValueSource)">
            <summary>
            Refreshes the cache amongst servers for prevalues.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Cache.IFormsDistributedCache.RemovePreValue(Umbraco.Forms.Core.Interfaces.IFieldPreValueSource)">
            <summary>
            Refreshes the cache amongst servers for prevalues.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Cache.IFormsDistributedCache.RefreshWorkflow(Umbraco.Forms.Core.Interfaces.IWorkflow)">
            <summary>
            Refreshes the cache amongst servers for form workflows.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Cache.IFormsDistributedCache.RemoveWorkflow(Umbraco.Forms.Core.Interfaces.IWorkflow)">
            <summary>
            Deletes the cache amongst servers for form workflows.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Cache.IFormsDistributedCache.RefreshDataSource(Umbraco.Forms.Core.FormDataSource)">
            <summary>
            Refreshes the cache amongst servers for dataSources.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Cache.IFormsDistributedCache.RemoveDataSource(Umbraco.Forms.Core.FormDataSource)">
            <summary>
            Removes the cache amongst servers for dataSources.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Cache.InterfaceJsonConverter`2">
            <summary>
            Defines JSON serialization settings for conversions between an interface and it's concrete implementing class.
            </summary>
            <typeparam name="TInterface">The interface.</typeparam>
            <typeparam name="TClass">The class implementing the interface.</typeparam>
        </member>
        <member name="M:Umbraco.Forms.Core.Cache.InterfaceJsonConverter`2.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Serializes the provided object to JSON.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Cache.InterfaceJsonConverter`2.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Serializes the JSON to the requested type.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Cache.InterfaceJsonConverter`2.CanConvert(System.Type)">
            <summary>
            Determines if the provided type can be converted to the typed interface.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Cache.JsonPayloads">
            <summary>
            Defines the JSON payloads issues in cache refresher messages.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Cache.JsonPayloads.FolderPayload">
            <summary>
            Defines the JSON payload for a folder in cache refresher messages.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Cache.JsonPayloads.FolderPayload.Folder">
            <summary>
            Gets or sets the folder instance.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Cache.JsonPayloads.FolderPayload.DeleteFolder">
            <summary>
            Gets or sets a value indicating whether the folder should be deleted from the cache.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Cache.JsonPayloads.FormPayload">
            <summary>
            Defines the JSON payload for a form in cache refresher messages.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Cache.JsonPayloads.FormPayload.Form">
            <summary>
            Gets or sets the form instance.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Cache.JsonPayloads.FormPayload.DeleteForm">
            <summary>
            Gets or sets a value indicating whether the form should be deleted from the cache.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Cache.JsonPayloads.WorkflowPayload">
            <summary>
            Defines the JSON payload for a workflow in cache refresher messages.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Cache.JsonPayloads.WorkflowPayload.Workflow">
            <summary>
            Gets or sets the workflow instance.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Cache.JsonPayloads.WorkflowPayload.DeleteWorkflow">
            <summary>
            Gets or sets a value indicating whether the workflow should be deleted from the cache.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Cache.JsonPayloads.DataSourcePayload">
            <summary>
            Defines the JSON payload for a datasource in cache refresher messages.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Cache.JsonPayloads.DataSourcePayload.DataSource">
            <summary>
            Gets or sets the datasource instance.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Cache.JsonPayloads.DataSourcePayload.DeleteDataSource">
            <summary>
            Gets or sets a value indicating whether the datasource should be deleted from the cache.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Cache.JsonPayloads.PreValuePayload">
            <summary>
            Defines the JSON payload for a prevalue in cache refresher messages.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Cache.JsonPayloads.PreValuePayload.PreValue">
            <summary>
            Gets or sets the prevalue instance.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Cache.JsonPayloads.PreValuePayload.DeletePreValue">
            <summary>
            Gets or sets a value indicating whether the prevalue should be deleted from the cache.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Cache.PreValueCacheRefresher">
            <summary>
            Cache refresher for datasources stored in the database.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Cache.PreValueCacheRefresher.#ctor(Umbraco.Cms.Core.Cache.AppCaches,Umbraco.Cms.Core.Serialization.IJsonSerializer,Umbraco.Cms.Core.Events.IEventAggregator,Umbraco.Cms.Core.Cache.ICacheRefresherNotificationFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Umbraco.Forms.Core.Cache.PreValueCacheRefresher"/> class.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Cache.PreValueCacheRefresher.RefresherUniqueId">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Cache.PreValueCacheRefresher.Name">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Core.Cache.PreValueCacheRefresher.RefreshAll">
            <inheritdoc/>
            <remarks>
            Used to clear all runtime cache for pre-values.
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Umbraco.Forms.Core.Cache.PreValueCacheRefresher.Refresh(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:Umbraco.Forms.Core.Cache.WorkflowCacheRefresher.Refresh(System.String)" -->
        <member name="T:Umbraco.Forms.Core.Configuration.DatePickerSettings">
            <summary>
            Defines security settings relating to the date picker field type.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Configuration.DatePickerSettings.DatePickerYearRange">
            <summary>
            Gets or sets the range of years to allow selection from.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Configuration.DefaultFormSettings">
            <summary>
            Defines defaults for created forms.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Configuration.DefaultFormSettings.ManualApproval">
            <summary>
            Gets or sets a value indicating whether the form requires manual approval.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Configuration.DefaultFormSettings.DisableStylesheet">
            <summary>
            Gets or sets a value indicating whether the form requires manual approval.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Configuration.DefaultFormSettings.MarkFieldsIndicator">
            <summary>
            Gets or sets the form field indication behaviour.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Configuration.DefaultFormSettings.Indicator">
            <summary>
            Gets or sets the default form field indicator.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Configuration.DefaultFormSettings.RequiredErrorMessage">
            <summary>
            Gets or sets the default error message for a missing but required form field entry.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Configuration.DefaultFormSettings.InvalidErrorMessage">
            <summary>
            Gets or sets the default error message for an invalid form field entry.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Configuration.DefaultFormSettings.ShowValidationSummary">
            <summary>
            Gets or sets a value indicating whether the validation summary should be shown.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Configuration.DefaultFormSettings.HideFieldValidationLabels">
            <summary>
            Gets or sets a value indicating whether field validation labels should be hidden.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Configuration.DefaultFormSettings.MessageOnSubmit">
            <summary>
            Gets or sets the default message shown to the user on submission.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Configuration.DefaultFormSettings.StoreRecordsLocally">
            <summary>
            Gets or sets a value indicating whether form submissions (records) should be stored in the local database.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Configuration.DefaultFormSettings.AutocompleteAttribute">
            <summary>
            Gets or sets a value for the default autocomplete attribute applied to rendered forms.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Configuration.FormDesignSettings">
            <summary>
            Defines configuration settings related to form design.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Configuration.FormDesignSettings.Defaults">
            <summary>
            Gets or sets the default form settings.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Configuration.FormDesignSettings.DisableAutomaticAdditionOfDataConsentField">
            <summary>
            Gets or sets a value indicating whether the data consent field should be automatically added to new forms.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Configuration.FormDesignSettings.DisableDefaultWorkflow">
            <summary>
            Gets or sets a value indicating whether the default workflow should be disabled for new forms.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Configuration.FormDesignSettings.MaxNumberOfColumnsInFormGroup">
            <summary>
            Gets or set the maximum number of columns that can be added to a form group.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Configuration.FormDesignSettings.DefaultTheme">
            <summary>
            Gets or sets the default theme to use when rendering forms where the editor hasn't selected a theme.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Configuration.FormDesignSettings.DefaultEmailTemplate">
            <summary>
            Gets or sets a relative path, within Views/Partials, to the default email template used in Razor email workflows.
            </summary>
            <remarks>
            If empty or missing, the default of Forms/Emails/Example-Template.cshtml is used.
            </remarks>
        </member>
        <member name="T:Umbraco.Forms.Core.Configuration.PackageOptionSettings">
            <summary>
            Defines settings for package runtime options.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Configuration.PackageOptionSettings.IgnoreWorkFlowsOnEdit">
            <summary>
            Gets or sets a value indicating whether workflows should be ignored on edit.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Configuration.PackageOptionSettings.ExecuteWorkflowAsync">
            <summary>
            Gets or sets a value indicating whether workflows should be executed asynchronously.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Configuration.PackageOptionSettings.AllowEditableFormSubmissions">
            <summary>
            Gets or sets a value indicating whether form submission can be edited.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Configuration.PackageOptionSettings.AppendQueryStringOnRedirectAfterFormSubmission">
            <summary>
            Gets or sets a value indicating whether to append a querystring on redirect after form submission.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Configuration.Recaptcha2Settings">
            <summary>
            Defines security settings relating to the Recaptcha2 field type.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Configuration.Recaptcha2Settings.PublicKey">
            <summary>
            Gets or sets the public key.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Configuration.Recaptcha2Settings.PrivateKey">
            <summary>
            Gets or sets the private key.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Configuration.Recaptcha3Settings">
            <summary>
            Defines security settings relating to the Recaptcha3 field type.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Configuration.Recaptcha3Settings.SiteKey">
            <summary>
            Gets or sets the site key.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Configuration.Recaptcha3Settings.PrivateKey">
            <summary>
            Gets or sets the private key.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Configuration.SecuritySettings">
            <summary>
            Defines security related settings.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Configuration.SecuritySettings.DisallowedFileUploadExtensions">
            <summary>
            Gets or sets a value listing the file extensions that are disallowed from upload for all forms.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Configuration.SecuritySettings.EnableAntiForgeryToken">
            <summary>
            Gets or sets a value indicating whether anti-forgery tokens should be used on forms.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Configuration.SecuritySettings.SavePlainTextPasswords">
            <summary>
            Gets or sets a value indicating whether saving plain text passwords is allowed.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Configuration.SecuritySettings.DisableFileUploadAccessProtection">
            <summary>
            Gets or sets a value indicating whether the protection for access of file uploads is disabled
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Configuration.SecuritySettings.ManageSecurityWithUserGroups">
            <summary>
            Gets or sets a value indicating whether the permissions are managed at the group level.
            </summary>
            <remarks>
            Setting this to true will:
             - Provide additional tree and editor options to manage permissions at the user group level.
             - Remove the automatic addition of user security records for users.
             - Allow for the removal of existing user security records via a tree menu.
             - Allow for the manual creation of user security records if necessary for fine control over and above the user group permissions.
             - Use an updated permission check which will:
                 - Check if a user has a user specific security record setup, and if so use that.
                 - Otherwise give permission for a resource if at least one user groups they are part of has access granted.
            If using the pre 8.11/9/3 behaviour of managing security on a per-user basis this setting should be omitted or set to the
            default value of False.
            </remarks>
        </member>
        <member name="P:Umbraco.Forms.Core.Configuration.SecuritySettings.GrantAccessToNewFormsForUserGroups">
            <summary>
            Gets or sets a comma seperated list of user group aliases that will be granted access automatically to new forms, when
            <see cref="P:Umbraco.Forms.Core.Configuration.SecuritySettings.ManageSecurityWithUserGroups"/> is set to true.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Configuration.SecuritySettings.DefaultUserAccessToNewForms">
            <summary>
            Gets or sets a value indicating whether users are automatically granted access to newly created forms.
            </summary>
            <remarks>
            Admin users will always be granted access
            </remarks>
        </member>
        <member name="T:Umbraco.Forms.Core.Constants">
            <summary>
            Defines global constants.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Constants.System">
            <summary>
            Defines global system constants.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.System.ApplicationAlias">
            <summary>
            Application alias.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.System.ApplicationName">
            <summary>
            Application name.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.System.AreaName">
            <summary>
            Application area name.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.System.LicenseFileName">
            <summary>
            Licence file name.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.System.MigrationPlanName">
            <summary>
            Database schema and data migration plan name.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.System.PluginPath">
            <summary>
            Plug-in file path.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.System.EmailTemplatesPath">
            <summary>
            Email templates file path.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.System.ThemesPath">
            <summary>
            Themes file path.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.System.ViewsPath">
            <summary>
            Views file path.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.System.ThemesFileSystemViewsPath">
            <summary>
            Themes file system views relative path.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.System.DefaultEmailFileName">
            <summary>
            Default email file name.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.System.DefaultEmailTemplatePath">
            <summary>
            Default email template relative file path.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.System.FormsConfigPath">
            <summary>
            Forms configuration file path.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Constants.Trees">
            <summary>
            Defines global tree related constants.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.Trees.Form">
            <summary>
            Forms tree.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.Trees.PreValueSource">
            <summary>
            Prevalue sources tree.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.Trees.DataSource">
            <summary>
            Datasources tree.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.Trees.FormSecurity">
            <summary>
            Form security tree.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.Trees.EmailTemplates">
            <summary>
            Email templates tree.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Constants.Macros">
            <summary>
            Defines global macro related constants.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.Macros.FormScripts">
            <summary>
            Form scripts macro Id.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.Macros.InsertFormWithTheme">
            <summary>
            Insert form with theme macro Id.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.Macros.InsertFormWithThemePropPicker">
            <summary>
            Insert form with theme macro property form picker Id.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.Macros.InsertFormWithThemePropTheme">
            <summary>
            Insert form with theme property theme selector Id.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.Macros.InsertFormWithThemePropExcludeScripts">
            <summary>
            Insert form with theme macro property for script exclusion.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Constants.FieldTypes">
            <summary>
            Defines global field type constants.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.FieldTypes.CheckBox">
            <summary>
            Check-box field type Id.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.FieldTypes.CheckBoxList">
            <summary>
            Check-box list field type Id.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.FieldTypes.DatePicker">
            <summary>
            Date picker field type Id.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.FieldTypes.DropDownList">
            <summary>
            Drop-down list field type Id.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.FieldTypes.Upload">
            <summary>
            Upload field type Id.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.FieldTypes.HiddenField">
            <summary>
            Hidden field type Id.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.FieldTypes.Password">
            <summary>
            Password field type Id.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.FieldTypes.RadioButtonList">
            <summary>
            Radio button list field type Id.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.FieldTypes.Recaptcha2">
            <summary>
            Recaptcha2 field type Id.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.FieldTypes.Recaptcha3">
            <summary>
            Recaptcha3 field type Id.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.FieldTypes.Text">
            <summary>
            Text field type Id.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.FieldTypes.Textarea">
            <summary>
            Text area field type Id.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.FieldTypes.Textfield">
            <summary>
            Text field type Id.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.FieldTypes.DataConsentField">
            <summary>
            Data consent field type Id.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Constants.RecordSetActionTypes">
            <summary>
            Defines global record set action type constants.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.RecordSetActionTypes.ApproveRecordSet">
            <summary>
            Approve record set action type Id.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.RecordSetActionTypes.DeleteRecordSet">
            <summary>
            Delete record set action type Id.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Constants.FormDataSourceTypes">
            <summary>
            Defines global form datasource type constants constants.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.FormDataSourceTypes.MsSql">
            <summary>
            Microsoft SQL Server datasource type Id.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.FormDataSourceTypes.Webservice">
            <summary>
            Web service datasource type Id.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Constants.FieldPreValueSourceTypes">
            <summary>
            Defines global field prevalue source type constants.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.FieldPreValueSourceTypes.DataSource">
            <summary>
            Datasource prevalue source type Id.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.FieldPreValueSourceTypes.GetValuesFromTextFile">
            <summary>
            Text file prevalue source type Id.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.FieldPreValueSourceTypes.NodePreValues">
            <summary>
            Node prevalue source type Id.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.FieldPreValueSourceTypes.ReadOnlySql">
            <summary>
            Sql prevalue source type Id.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.FieldPreValueSourceTypes.UmbracoPreValuesReadOnly">
            <summary>
            Umbraco prevalues prevalue source type Id.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Constants.WorkflowTypes">
            <summary>
            Defines global workflow type constants.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.WorkflowTypes.ChangeRecordState">
            <summary>
            Change record state workflow type Id.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.WorkflowTypes.PostAsXml">
            <summary>
            Post as XML workflow type Id.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.WorkflowTypes.PostToUrl">
            <summary>
            Post to URL workflow type Id.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.WorkflowTypes.SaveAsFile">
            <summary>
            Save as file workflow type Id.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.WorkflowTypes.SaveAsUmbracoNode">
            <summary>
            Save as Umbraco node workflow type Id.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.WorkflowTypes.SendEmail">
            <summary>
            Send email workflow type Id.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.WorkflowTypes.SendRazorEmail">
            <summary>
            Send Razor email workflow type Id.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.WorkflowTypes.SendXsltEmail">
            <summary>
            Send XSLT email workflow type Id.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.WorkflowTypes.Slack">
            <summary>
            Send to Slack workflow type Id (version 1: using legacy tokens).
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.WorkflowTypes.SlackV2">
            <summary>
            Send to Slack workflow type Id (version 2: using web hooks).
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Constants.DataConsent">
            <summary>
            Defines global data consent related constants.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.DataConsent.Alias">
            <summary>
            Data consent field alias.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.DataConsent.FieldDefaultValue">
            <summary>
            Data consent field default value.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.DataConsent.AcceptDefaultValue">
            <summary>
            Data consent acceptance message default value.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.DataConsent.RequiredDefaultValue">
            <summary>
            Data consent required message default value.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Constants.ExportTypes">
            <summary>
            Defines global export type constants.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.ExportTypes.Excel">
            <summary>
            Excel export type.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.ExportTypes.SaveAllUploadedFiles">
            <summary>
            Save all uploaded files (in disk structure) export type.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.ExportTypes.SaveAllUploadedFilesByEntry">
            <summary>
            Save all uploaded files (by entry) export type.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Constants.ExamineIndex">
            <summary>
            Defines global examine index related constants.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.ExamineIndex.UmbracoFormsIndexItemType">
             <summary>
             Umbraco forms index item type.
             </summary>
            
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.ExamineIndex.RecordIndexType">
            <summary>
            Record index type.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.ExamineIndex.RecordIndexPath">
            <summary>
            Record index path.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.ExamineIndex.RecordIndexName">
            <summary>
            Record index name.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Constants.FileSystemRoots">
            <summary>
            Defines global file system root constants.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.FileSystemRoots.RootForSavedData">
            <summary>
            Path to the root folder for saved data.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.FileSystemRoots.RootForPackageData">
            <summary>
            Path to the root folder for package data.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Constants.RecordIndex">
            <summary>
            Defines Examine record index fields.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.RecordIndex.Fields">
            <summary>
            Fields field.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.RecordIndex.Blob">
            <summary>
            Blob field.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.RecordIndex.State">
            <summary>
            State field.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.RecordIndex.Ip">
            <summary>
            IP address field.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.RecordIndex.UniqueId">
            <summary>
            Unique Id field.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.RecordIndex.Updated">
            <summary>
            Updated date field.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.RecordIndex.Created">
            <summary>
            Created date field.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.RecordIndex.Form">
            <summary>
            Form Id field.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.RecordIndex.MemberKey">
            <summary>
            Member key field.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.RecordIndex.CurrentPage">
            <summary>
            Current page field.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.RecordIndex.UmbracoPageId">
            <summary>
            Umbraco page Id field.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.RecordIndex.RecordFields">
            <summary>
            Record fields field.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Constants.Tables">
            <summary>
            Defines table names.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.Tables.Record">
            <summary>
            Records table name.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.Tables.RecordField">
            <summary>
            Record fields table name.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.Tables.RecordDataBit">
            <summary>
            Record fields data (in bit/boolean format) table name.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.Tables.RecordDataDateTime">
            <summary>
            Record fields data (in date timeformat) table name.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.Tables.RecordDataInteger">
            <summary>
            Record fields data (in integer format) table name.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.Tables.RecordDataLongString">
            <summary>
            Record fields data (in long string format) table name.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.Tables.RecordDataString">
            <summary>
            Record fields data (in string format) table name.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.Tables.RecordAudit">
            <summary>
            Record audit table name.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.Tables.UserSecurity">
            <summary>
            User security table name.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.Tables.UserGroupSecurity">
            <summary>
            User group security table name.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.Tables.UserFormSecurity">
            <summary>
            User/form security table name.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.Tables.UserGroupFormSecurity">
            <summary>
            User/form security table name.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.Tables.Form">
            <summary>
            Forms table name.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.Tables.Folder">
            <summary>
            Folders table name.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.Tables.Workflow">
            <summary>
            Workflows table name.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.Tables.PrevalueSource">
            <summary>
            Prevalue sources table name.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.Tables.DataSource">
            <summary>
            Datasources table name.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.Tables.UserStartFolder">
            <summary>
            User/start folder table name.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.Tables.UserGroupStartFolder">
            <summary>
            User group/start folder table name.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Constants.DefaultValues">
            <summary>
            Defines default values.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.DefaultValues.MaxNumberOfColumnsInFormGroup">
            <summary>
            The default maximum number of columns allowed in a form group (if not provided in configuration).
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Constants.Configuration">
            <summary>
            Defines package configuration details (settings that can't be overridden per installation, and configuration file section keys).
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.Configuration.Path">
            <summary>
            Gets the full path to the plugins folder.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.Configuration.UploadTempPath">
            <summary>
            Gets the upload temp path.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.Configuration.UploadPath">
            <summary>
            The upload path - used with with Media File Storage Provider.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.Configuration.VersionMarkerFileName">
            <summary>
            Gets the path to the version marker.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Constants.Configuration.SectionKeys">
            <summary>
            Defines section keys used in the configuration file.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.Configuration.SectionKeys.Root">
            <summary>
            The root section for Forms configuration.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.Configuration.SectionKeys.FormDesign">
            <summary>
            THe section for form design configuration.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.Configuration.SectionKeys.PackageOptions">
            <summary>
            THe section for package option configuration.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.Configuration.SectionKeys.Security">
            <summary>
            THe section for security configuration.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Constants.Configuration.SectionKeys.FieldTypes">
            <summary>
            Defines section keys used in the configuration file for specific field types.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.Configuration.SectionKeys.FieldTypes.DatePicker">
            <summary>
            THe section for the date picker field type configuration.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.Configuration.SectionKeys.FieldTypes.Recaptcha2">
            <summary>
            THe section for the Recaptcha2 field type configuration.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.Configuration.SectionKeys.FieldTypes.Recaptcha3">
            <summary>
            THe section for the Recaptcha3 field type configuration.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Constants.AuthorizationPolicies">
            <summary>
            Defines names of authorization policies for back-office controllers.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.AuthorizationPolicies.SectionAccessForms">
            <summary>
            The upload path - used with with Media File Storage Provider.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Constants.HttpContextKeys">
            <summary>
            Defines keys used for data available in the HttpContext.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Constants.HttpContextKeys.ItemKeys">
            <summary>
            Defines keys used for data available in the HttpContext.Items collection
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.HttpContextKeys.ItemKeys.PageElements">
            <summary>
            The page elements stored and used in "magic string" replacements.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Constants.FormSubmission">
            <summary>
            Defines constants used in form submission handling.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.FormSubmission.EncryptedFilePathAndFileNameSeparator">
            <summary>
            Exposes a separator used when rendering an encrypted temporary file path and an unencrypted file name
            for display when a file is already selected on a multi-page form.
            </summary>
            <remarks>
            Using something a little bit complicated so we don't risk a clash with the encrypted file path.
            </remarks>
        </member>
        <member name="T:Umbraco.Forms.Core.Constants.EventAdditionalData">
            <summary>
            Defines event additional data key values.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.EventAdditionalData.MovedFromFolderId">
            <summary>
            The key used to provide the original parent for a moved form or folder.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Constants.ItemKeys">
            <summary>
            Defines key names used in HttpContext.Items.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.ItemKeys.RedirectAfterFormSubmitUrl">
            <summary>
            Defines a key that can be used by workflows to set a redirect to use after the form has been submitted and
            all workflows processed.
            If set it will take precedence over the normal behaviour to either display a message or redirect to a configured
            Umbraco page.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Constants.Themes">
            <summary>
            Defines details of themes provided by the core Forms package.
            </summary>
            <remarks>
            It would be nice to derive these at runtime, as currently if any theme files are added to the core package,
            we need to remember to reference them here.
            However it's likely faster to have them as a compile time constant.
            And it's difficult due to our project structure (can't add a compile time reference from the "Web" project to the
            "StaticAssets" one).
            </remarks>
        </member>
        <member name="F:Umbraco.Forms.Core.Constants.Themes.CoreThemes">
            <summary>
            The themes provided by the product and served via a razor class library (RCL).
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Constants.Themes.GetFilesForTheme(System.String)">
            <summary>
            Gets the files provided within each default theme,
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Controllers.RazorEmailViewController">
            <summary>
            Simple controller used for sending form entries in an email.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Controllers.RazorEmailViewController.Index">
            <summary>
            Renders an empty string through an action method.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Data.Helpers.DeepCloning">
            <summary>
            Provides helper methods for deep cloning objects.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Helpers.DeepCloning.Clone``1(``0)">
            <summary>
            Deep clones an object.
            </summary>
            <typeparam name="T">Type of object to clone.</typeparam>
        </member>
        <member name="T:Umbraco.Forms.Core.Data.Helpers.DictionaryHelper">
            <summary>
            Dictionary related helper methods.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Helpers.DictionaryHelper.GetText(System.String)">
            <summary>
            Gets the text for a text containing a dictionary key.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Data.Helpers.FileHelper">
            <summary>
            Provides file path and name related helper methods.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Helpers.FileHelper.SafeUrl(System.String)">
            <summary>
            Sanitises a given URL.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Helpers.FileHelper.MakeValidFileName(System.String)">
            <summary>
            Converts a provided name into a valid file name.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Helpers.IDictionaryHelper.GetText(System.String)">
            <summary>
            Gets the text for a text containing a dictionary key.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Data.Helpers.JsonHelper">
            <summary>
            Provides helper methods for working with JSON.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Helpers.JsonHelper.EscapeStringValue(System.String)">
            <summary>
            Escapes a string value for use in a JSON document.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Data.Helpers.XmlHelper">
            <summary>
            Provides helper methods for working with XML.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Helpers.XmlHelper.XmlRecordsRootNode(System.Xml.XmlDocument,Umbraco.Forms.Core.Models.Form)">
            <summary>
            Creates the root node for a form's entries (records).
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Helpers.XmlHelper.ConvertRecordsToXml(Umbraco.Forms.Core.Services.IXmlService,Umbraco.Forms.Core.Models.Form,System.Collections.Generic.List{Umbraco.Forms.Core.Persistence.Dtos.Record},System.Xml.XmlDocument)">
            <summary>
            Converts the entries (records) for a form to XML.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Helpers.XmlHelper.XmlName(System.String)">
            <summary>
            Creates a valid name for an XML element.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Helpers.XmlHelper.CleanInvalidXmlChars(System.String)">
            <summary>
            Cleans invalid XML characters from a string.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Helpers.XmlHelper.AddAttribute(System.Xml.XmlDocument,System.String,System.String)">
            <summary>
            Creates a XmlAttribute with the specified name and value
            </summary>
            <param name="xmlDocument">The xmldocument.</param>
            <param name="name">The name of the attribute.</param>
            <param name="value">The value of the attribute.</param>
            <returns>a XmlAttribute</returns>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Helpers.XmlHelper.AddTextNode(System.Xml.XmlDocument,System.String,System.String)">
            <summary>
            Creates a text XmlNode with the specified name and value
            </summary>
            <param name="xmlDocument">The xmldocument.</param>
            <param name="name">The node name.</param>
            <param name="value">The node value.</param>
            <returns>a XmlNode</returns>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Helpers.XmlHelper.AddCDataNode(System.Xml.XmlDocument,System.String,System.String)">
            <summary>
            Creates a cdata XmlNode with the specified name and value
            </summary>
            <param name="xmlDocument">The xmldocument.</param>
            <param name="name">The node name.</param>
            <param name="value">The node value.</param>
            <returns>A XmlNode</returns>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Helpers.XmlHelper.GetNodeValue(System.Xml.XmlNode)">
            <summary>
            Gets the value of a XmlNode
            </summary>
            <param name="n">The XmlNode.</param>
            <returns>the value as a string</returns>
        </member>
        <member name="T:Umbraco.Forms.Core.Data.Helpers.XpathExecutionHelper">
            <summary>
            Provides helper methods for XPath execution.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Helpers.XpathExecutionHelper.GetResult(System.String,System.Int32,Umbraco.Cms.Core.Services.IEntityService,Umbraco.Cms.Core.IPublishedContentQuery)">
            <summary>
            Gets the result of an XPath query.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Helpers.XpathExecutionHelper.ParseXPathQuery(System.String,System.Nullable{System.Int32},System.Func{System.Int32,System.Collections.Generic.IEnumerable{System.String}},System.Func{System.Int32,System.Boolean})">
            <summary>
            Parses custom umbraco xpath expression (Taken from Umbraco Core, copied due to it being internal)
            </summary>
            <param name="xpathExpression">The Xpath expression</param>
            <param name="nodeContextId">
            The current node id context of executing the query - null if there is no current node, in which case
            some of the parameters like $current, $parent, $site will be disabled
            </param>
            <param name="getPath">The callback to create the nodeId path, given a node Id</param>
            <param name="publishedContentExists">The callback to return whether a published node exists based on Id</param>
        </member>
        <member name="T:Umbraco.Forms.Core.Data.Helpers.XsltHelper">
            <summary>
            Provides helper methods for working with XSLT.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Helpers.XsltHelper.TransformXML(System.String,System.String)">
            <summary>
            Performs a transformation of an XML file with an XSLT template.
            </summary>
            <param name="xml">The XML content.</param>
            <param name="xsltFile">The full, absolute file path to the XSLT file.</param>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Helpers.XsltHelper.TransformXML(System.String,System.String,Umbraco.Cms.Core.IO.MediaFileManager)">
            <summary>
            Performs a transformation of an XML file with an XSLT template.
            </summary>
            <param name="xml">The XML content.</param>
            <param name="xsltFile">The full, absolute file path to the XSLT file.</param>
            <param name="mediaFileManager">The <see cref="T:Umbraco.Cms.Core.IO.MediaFileManager"/>.</param>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Helpers.XsltHelper.TransformXML(System.String,System.Xml.Xsl.XslCompiledTransform)">
            <summary>
            Performs a transformation of an XML file with an XSLT template.
            </summary>
            <param name="xml">The XML content.</param>
            <param name="xslTransform">The <see cref="T:System.Xml.Xsl.XslCompiledTransform"/>.</param>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Helpers.XsltHelper.TransformXML(System.Xml.XmlNode,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Performs a transformation of an XML file with an XSLT template.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.IPreValueTextFileStorage.GetTextFilePreValues(System.String)">
            <summary>
            Used to fetch the list of PreValues from the text file store in IFileSystem
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.IPreValueTextFileStorage.SaveValuesIntoFile(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Save the list of values as strings into a path to save into Forms IFileSystem
            </summary>
            <param name="values"></param>
            <param name="filePath"></param>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.IPreValueTextFileStorage.GenerateFilePath(System.String,System.Guid)">
             <summary>
            
             </summary>
             <param name="filename"></param>
             <param name="preValueId"></param>
             <returns></returns>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.IPreValueTextFileStorage.SaveTextFile(System.IO.Stream,System.String,System.Guid)">
            <summary>
            Used to save the file from the upload file API request
            Which only has a filename at this point
            </summary>
            <param name="fileContentStream"></param>
            <param name="filename"></param>
            <param name="preValueId"></param>
        </member>
        <member name="T:Umbraco.Forms.Core.Data.Storage.IRecordAuditStorage">
            <summary>
            Defines properties and methods for managing record audit entries.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Storage.IRecordAuditStorage.GetRecordAuditTrail(System.Int32)">
            <summary>
            Get the audit trail for a record.
            </summary>
            <param name="recordId">Record Id.</param>
            <returns>A list of <see cref="T:Umbraco.Forms.Core.Persistence.Dtos.RecordAudit"/> entries for the record.</returns>
        </member>
        <member name="T:Umbraco.Forms.Core.Data.Storage.IRecordFieldStorage">
            <summary>
            Defines properties and methods for managing record (form submission) fields in storage.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Umbraco.Forms.Core.Data.Storage.IRecordFieldStorage.GetAllRecordFields(Umbraco.Forms.Core.Persistence.Dtos.Record,Umbraco.Forms.Core.Models.Form)" -->
        <!-- Badly formed XML comment ignored for member "M:Umbraco.Forms.Core.Data.Storage.IRecordFieldStorage.GetAllRecordFields(System.Collections.Generic.IEnumerable{Umbraco.Forms.Core.Persistence.Dtos.Record},Umbraco.Forms.Core.Models.Form)" -->
        <!-- Badly formed XML comment ignored for member "M:Umbraco.Forms.Core.Data.Storage.IRecordFieldStorage.GetRecordField(System.Guid)" -->
        <member name="M:Umbraco.Forms.Core.Data.Storage.IRecordFieldStorage.InsertRecordFields(System.Collections.Generic.IEnumerable{Umbraco.Forms.Core.Persistence.Dtos.RecordField})">
            <summary>
            Insert fields from a record/submission into the DB with its values too
            </summary>
            <param name="recordfields">The fields from the record to insert</param>
            <returns>The recordfields</returns>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Storage.IRecordFieldStorage.InsertRecordField(Umbraco.Forms.Core.Persistence.Dtos.RecordField)">
            <summary>
            Insert a field from a record/submission into the DB with its values too
            </summary>
            <param name="recordfield">The field from the record to insert</param>
            <returns>The recordfield object</returns>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Storage.IRecordFieldStorage.DeleteRecordField(Umbraco.Forms.Core.Persistence.Dtos.RecordField)">
            <summary>
            Delete a Record Field and its values
            </summary>
            <param name="recordField">A form field from a specific record/submission to delete</param>
            <returns>A boolean indiciating the</returns>
            <remarks>
            Do not use in a for loop of all records in a field.
            Produces expensive SQL calls when used in a loop, see DeleteAllRecordFields() instead
            </remarks>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Storage.IRecordFieldStorage.UpdateRecordField(Umbraco.Forms.Core.Persistence.Dtos.RecordField)">
            <summary>
            Update a single Record Field
            Performs
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Storage.IRecordFieldStorage.UpdateRecordFields(System.Collections.Generic.IEnumerable{Umbraco.Forms.Core.Persistence.Dtos.RecordField})">
            <summary>
            Update a list of Record Fields
            Performs
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Data.Storage.IRecordFieldValueStorage">
            <summary>
            Defines properties and methods for managing record (form submission) field values in storage.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Storage.IRecordFieldValueStorage.GetRecordFieldValues(Umbraco.Forms.Core.Persistence.Dtos.RecordField)">
            <summary>
            Retrieve the value/s for a specific Record Field in a form
            </summary>
            <returns>A list of objects containing the value store for the record field from the DB</returns>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Storage.IRecordFieldValueStorage.InsertRecordFieldValues(Umbraco.Forms.Core.Persistence.Dtos.RecordField)">
            <summary>
            Insert Record Field and its value to the Database
            </summary>
            <returns>The value/s of the Record Field that has been inserted</returns>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Storage.IRecordFieldValueStorage.DeleteRecordFieldValues(Umbraco.Forms.Core.Persistence.Dtos.RecordField)">
            <summary>
            This performs a DELETE call for each Data Type
            </summary>
            <param name="recordFieldInForm">A record Field on the Form you wish to delete all values from</param>
            <returns>A boolean if completes the action succesfully</returns>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Storage.IRecordFieldValueStorage.DeleteRecordFieldValues(System.Collections.Generic.IEnumerable{Umbraco.Forms.Core.Persistence.Dtos.RecordField})">
            <summary>
            This performs a DELETE call for each Data Type
            </summary>
            <param name="recordFieldInForms">A record Field on the Form you wish to delete all values from</param>
            <returns>A boolean if completes the action succesfully</returns>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Storage.IRecordFieldValueStorage.DeleteAllRecordFieldValues(Umbraco.Forms.Core.Persistence.Dtos.Record)">
            <summary>
            This performs a BULK SQL Delete to delete the entire record's field values.
            </summary>
            <param name="record">A record you wish to delete all values from</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Umbraco.Forms.Core.Data.Storage.IRecordFieldValueStorage.DeleteAllRecordFieldValues(System.Collections.Generic.IList{System.Int32})" -->
        <member name="M:Umbraco.Forms.Core.Data.Storage.IRecordFieldValueStorage.DeleteAllRecordAuditValues(Umbraco.Forms.Core.Persistence.Dtos.Record)">
            <summary>
            This performs a BULK SQL Delete to delete the entire record's audit values.
            </summary>
            <param name="record">A record you wish to delete all values from</param>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Storage.IRecordFieldValueStorage.DeleteAllRecordAuditValues(System.Collections.Generic.IList{System.Int32})">
            <summary>
            This performs a BULK SQL Delete to delete the entire set of record audit values
            </summary>
            <param name="recordIds">A collection of record Ids you wish to delete all values from</param>
        </member>
        <member name="T:Umbraco.Forms.Core.Data.Storage.IRecordStorage">
            <summary>
            Defines properties and methods for managing records (form submissions) in storage.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Umbraco.Forms.Core.Data.Storage.IRecordStorage.GetAllRecords(Umbraco.Forms.Core.Models.Form,System.Boolean)" -->
        <member name="M:Umbraco.Forms.Core.Data.Storage.IRecordStorage.GetRecords(System.Collections.Generic.IEnumerable{System.Object},Umbraco.Forms.Core.Models.Form,System.Boolean)">
            <summary>
            Get specific records/submissions of a form
            </summary>
            <param name="ids">A list of Record IDs you wish to retrieve</param>
            <param name="form">Optional/Nullable: The Form object associated to the records you wish to retrieve</param>
            <param name="includeFields">A boolean indiciating if you wish to request field data, default is true</param>
            <returns>A list of records from a specific form</returns>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Storage.IRecordStorage.GetRecord(System.Int32,Umbraco.Forms.Core.Models.Form)">
            <summary>
            Retrieve a specific Record from the Database
            </summary>
            <param name="id">The integer id of the record you wish to retrieve</param>
            <param name="form">The form object of the form you wish to retrieve this record from</param>
            <returns>The record object queried</returns>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Storage.IRecordStorage.GetRecordByUniqueId(System.Guid,Umbraco.Forms.Core.Models.Form)">
            <summary>
            This retrieves a single Record from a record's Unique ID (GUID)
            </summary>
            <param name="uniqueId">The Record Unique ID to query for</param>
            <param name="form">The Form Object</param>
            <returns>A single Record</returns>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Storage.IRecordStorage.InsertRecord(Umbraco.Forms.Core.Persistence.Dtos.Record,Umbraco.Forms.Core.Models.Form)">
            <summary>
            Insert a new Record Submission for a Form
            </summary>
            <param name="record">The record to be inserted</param>
            <param name="form">The form that this record submission belongs to</param>
            <returns>The record object after being inserted into the Database</returns>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Storage.IRecordStorage.DeleteFormRecords(Umbraco.Forms.Core.Models.Form)">
            <summary>
            This deletes all records/submissions for a specific form, use with care
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Storage.IRecordStorage.DeleteRecord(Umbraco.Forms.Core.Persistence.Dtos.Record,Umbraco.Forms.Core.Models.Form)">
            <summary>
            Delete a specific Record Submission
            </summary>
            <param name="record">The record/submission object you wish to delete</param>
            <param name="form">The form that this record belongs to</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Umbraco.Forms.Core.Data.Storage.IRecordStorage.UpdateRecord(Umbraco.Forms.Core.Persistence.Dtos.Record,Umbraco.Forms.Core.Models.Form)" -->
        <!-- Badly formed XML comment ignored for member "M:Umbraco.Forms.Core.Data.Storage.IRecordStorage.UpdateRecord(Umbraco.Forms.Core.Persistence.Dtos.Record,Umbraco.Forms.Core.Models.Form,System.Nullable{System.Int32})" -->
        <member name="M:Umbraco.Forms.Core.Data.Storage.RecordAuditStorage.GetRecordAuditTrail(System.Int32)">
            <ineritdoc />
        </member>
        <!-- Badly formed XML comment ignored for member "M:Umbraco.Forms.Core.Data.Storage.RecordFieldStorage.GetAllRecordFields(Umbraco.Forms.Core.Persistence.Dtos.Record,Umbraco.Forms.Core.Models.Form)" -->
        <!-- Badly formed XML comment ignored for member "M:Umbraco.Forms.Core.Data.Storage.RecordFieldStorage.GetAllRecordFields(System.Collections.Generic.IEnumerable{Umbraco.Forms.Core.Persistence.Dtos.Record},Umbraco.Forms.Core.Models.Form)" -->
        <!-- Badly formed XML comment ignored for member "M:Umbraco.Forms.Core.Data.Storage.RecordFieldStorage.GetRecordField(System.Guid)" -->
        <member name="M:Umbraco.Forms.Core.Data.Storage.RecordFieldStorage.InsertRecordFields(System.Collections.Generic.IEnumerable{Umbraco.Forms.Core.Persistence.Dtos.RecordField})">
            <summary>
            Insert fields from a record/submission into the DB with its values too
            </summary>
            <param name="recordFields">The fields from the record to insert</param>
            <returns>The recordfields</returns>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Storage.RecordFieldStorage.InsertRecordField(Umbraco.Forms.Core.Persistence.Dtos.RecordField)">
            <summary>
            Insert a field from a record/submission into the DB with its values too
            </summary>
            <param name="recordfield">The field from the record to insert</param>
            <returns>The recordfield object</returns>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Storage.RecordFieldStorage.DeleteRecordField(Umbraco.Forms.Core.Persistence.Dtos.RecordField)">
            <summary>
            Delete a Record Field and its values
            </summary>
            <param name="recordField">A form field from a specific record/submission to delete</param>
            <returns>A boolean indiciating the</returns>
            <remarks>
            Do not use in a for loop of all records in a field.
            Produces expensive SQL calls when used in a loop, see DeleteAllRecordFields() instead
            </remarks>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Storage.RecordFieldStorage.UpdateRecordField(Umbraco.Forms.Core.Persistence.Dtos.RecordField)">
            <summary>
            Update a single Record Field
            Performs
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Storage.RecordFieldStorage.UpdateRecordFields(System.Collections.Generic.IEnumerable{Umbraco.Forms.Core.Persistence.Dtos.RecordField})">
            <summary>
            Update a list of Record Fields
            Performs
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Storage.RecordFieldValueStorage.GetRecordFieldValues(Umbraco.Forms.Core.Persistence.Dtos.RecordField)">
            <summary>
            Retrieve the value/s for a specific Record Field in a form
            </summary>
            <returns>A list of objects containing the value store for the record field from the DB</returns>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Storage.RecordFieldValueStorage.InsertRecordFieldValues(Umbraco.Forms.Core.Persistence.Dtos.RecordField)">
            <summary>
            Insert Record Field and its value to the Database
            </summary>
            <returns>The value/s of the Record Field that has been inserted</returns>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Storage.RecordFieldValueStorage.DeleteRecordFieldValues(Umbraco.Forms.Core.Persistence.Dtos.RecordField)">
            <summary>
            This performs a DELETE call for each Data Type
            </summary>
            <param name="recordFieldInForm">A record Field on the Form you wish to delete all values from</param>
            <returns>A boolean if completes the action succesfully</returns>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Storage.RecordFieldValueStorage.DeleteRecordFieldValues(System.Collections.Generic.IEnumerable{Umbraco.Forms.Core.Persistence.Dtos.RecordField})">
            <summary>
            This performs a DELETE call for each Data Type
            </summary>
            <param name="recordFieldInForms">A record Field on the Form you wish to delete all values from</param>
            <returns>A boolean if completes the action succesfully</returns>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Storage.RecordFieldValueStorage.DeleteAllRecordFieldValues(Umbraco.Forms.Core.Persistence.Dtos.Record)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Storage.RecordFieldValueStorage.DeleteAllRecordFieldValues(System.Collections.Generic.IList{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Storage.RecordFieldValueStorage.DeleteAllRecordAuditValues(Umbraco.Forms.Core.Persistence.Dtos.Record)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Storage.RecordFieldValueStorage.DeleteAllRecordAuditValues(System.Collections.Generic.IList{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Storage.RecordFieldValueStorage.GetTableName(Umbraco.Forms.Core.Enums.FieldDataType)">
            <summary>
            Help determine the correct SQL Table name based on the FieldDataType
            </summary>
            <param name="dataType">The Field DataType enum</param>
            <returns>A string of the SQL Database table to store the FieldValue Data</returns>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Storage.RecordFieldValueStorage.ParseToType(Umbraco.Forms.Core.Enums.FieldDataType)">
            <summary>
            From the FieldDataType Enum return a .NET object type
            that represents the type of data stored in that SQL Database table
            </summary>
            <param name="dataType">The Field DataType enum</param>
            <returns>A .NET object type such as string, int</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Umbraco.Forms.Core.Data.Storage.RecordStorage.GetAllRecords(Umbraco.Forms.Core.Models.Form,System.Boolean)" -->
        <member name="M:Umbraco.Forms.Core.Data.Storage.RecordStorage.GetRecords(System.Collections.Generic.IEnumerable{System.Object},Umbraco.Forms.Core.Models.Form,System.Boolean)">
            <summary>
            Get specific records/submissions of a form
            </summary>
            <param name="ids">A list of Record IDs you wish to retrieve</param>
            <param name="form">Optional/Nullable: The Form object associated to the records you wish to retrieve</param>
            <param name="includeFields">A boolean indiciating if you wish to request field data, default is true</param>
            <returns>A list of records from a specific form</returns>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Storage.RecordStorage.GetRecord(System.Int32,Umbraco.Forms.Core.Models.Form)">
            <summary>
            Retrieve a specific Record from the Database
            </summary>
            <param name="id">The integer id of the record you wish to retrieve</param>
            <param name="form">The form object of the form you wish to retrieve this record from</param>
            <returns>The record object queried</returns>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Storage.RecordStorage.GetRecordByUniqueId(System.Guid,Umbraco.Forms.Core.Models.Form)">
            <summary>
            This retrieves a single Record from a record's Unique ID (GUID)
            </summary>
            <param name="uniqueId">The Record Unique ID to query for</param>
            <param name="form">The Form Object</param>
            <returns>A single Record</returns>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Storage.RecordStorage.InsertRecord(Umbraco.Forms.Core.Persistence.Dtos.Record,Umbraco.Forms.Core.Models.Form)">
            <summary>
            Insert a new Record Submission for a Form
            </summary>
            <param name="record">The record to be inserted</param>
            <param name="form">The form that this record submission belongs to</param>
            <returns>The record object after being inserted into the Database</returns>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Storage.RecordStorage.DeleteFormRecords(Umbraco.Forms.Core.Models.Form)">
            <summary>
            This deletes all records/submissions for a specific form, use with care
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Storage.RecordStorage.DeleteRecord(Umbraco.Forms.Core.Persistence.Dtos.Record,Umbraco.Forms.Core.Models.Form)">
            <summary>
             Delete a specific Record Submission
            </summary>
            <param name="record">The record/submission object you wish to delete</param>
            <param name="form">The form the record is associated with.</param>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Storage.RecordStorage.UpdateRecord(Umbraco.Forms.Core.Persistence.Dtos.Record,Umbraco.Forms.Core.Models.Form)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco.Forms.Core.Data.Storage.RecordStorage.UpdateRecord(Umbraco.Forms.Core.Persistence.Dtos.Record,Umbraco.Forms.Core.Models.Form,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Umbraco.Forms.Core.Data.PreValueTextFileStorage.SaveTextFile(System.IO.Stream,System.String,System.Guid)">
            <summary>
            Used to save the file from the upload file API request
            Which only has a filename at this point
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.PreValueTextFileStorage.GetTextFilePreValues(System.String)">
            <summary>
            Used to fetch the list of PreValues from the text file store in IFileSystem
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Data.PreValueTextFileStorage.SaveValuesIntoFile(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Save the list of values as strings into a path to save into Forms IFileSystem
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Services.IFieldTypeStorage">
            <summary>
            Defines methods for accessing <see cref="T:Umbraco.Forms.Core.FieldType"/> data.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IFieldTypeStorage.GetFieldTypeByField(Umbraco.Forms.Core.Models.Field)">
            <summary>
            Retrieves a field type for a field.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Services.IBaseService`2">
            <summary>
            Defines the base service methods and events.
            </summary>
            <typeparam name="TType">Concrete type.</typeparam>
            <typeparam name="TEntity">Entity type.</typeparam>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IBaseService`2.Delete(System.Guid)">
            <summary>
            Deletes the item
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IBaseService`2.Delete(`0)">
            <summary>
            Deletes the item
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IBaseService`2.Get">
            <summary>
            Returns all items
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IBaseService`2.Get(System.Guid)">
            <summary>
            Returns an item
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IBaseService`2.Get(System.Guid[])">
            <summary>
            Returns items
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IBaseService`2.Insert(`0)">
            <summary>
            Inserts the item
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IBaseService`2.Update(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Updates the items
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IBaseService`2.Update(`0)">
            <summary>
            Updates the item
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IBaseService`2.Update(`0,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Updates the item
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Services.IDataSourceService">
            <summary>
            Defines the datasource service methods.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Services.IFieldPreValueSourceService">
            <summary>
            Defines the field prevalue source service methods.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IFieldPreValueSourceService.GetDefaultProvider">
            <summary>
            Gets the default provider for the prevalue source.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IFieldPreValueSourceService.GetById(System.Guid)">
            <summary>
            Gets a field prevalue source by Id.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Services.IFieldPreValueSourceTypeService">
            <summary>
            Defines the field prevalue source type service methods.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IFieldPreValueSourceTypeService.GetById(System.Guid)">
            <summary>
            Gets a field prevalue source type by Id.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Services.IFieldService">
            <summary>
            Defines the field service methods.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IFieldService.GetDuplicates(System.Collections.Generic.List{Umbraco.Forms.Core.Models.Field})">
            <summary>
            Retrieves the duplicate aliases from a collection of fields.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IFieldService.ContainsSensitiveData(System.Collections.Generic.List{Umbraco.Forms.Core.Models.Field})">
            <summary>
            Checks if a collection of fields contains sensitive data.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Services.IFolderService">
            <summary>
            Defines the form service methods.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IFolderService.GetAtRoot">
            <summary>
            Returns all root folders.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IFolderService.GetChildren(System.Guid)">
            <summary>
            Returns all child folders of the provided parent.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IFolderService.ExistsAndIsEmpty(System.Guid)">
            <summary>
            Checks to see if the folder for the provided id exists and is empty.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IFolderService.GetPath(System.Guid,System.String)">
            <summary>
            Gets the comma separated path to the provided folder.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Services.IFormService">
            <summary>
            Defines the form service methods.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IFormService.Get(System.String)">
            <summary>
            Get specific form by name.
            </summary>
            <param name="name">The name for the form</param>
            <returns>Form</returns>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IFormService.GetFromCache(System.String)">
            <summary>
            Get specific form from cache by name, if it exists.
            </summary>
            <returns>A form matching the name or null.</returns>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IFormService.ContainsSensitiveData(Umbraco.Forms.Core.Models.Form)">
            <summary>
            Checks if a form contains sensitive data.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IFormService.FormExists(System.String)">
            <summary>
            Checks if a form exists.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IFormService.GetAtRoot">
            <summary>
            Gets all forms available at the root.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IFormService.GetFromFolder(System.Guid)">
            <summary>
            Gets all forms from the provided folder.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Services.IPageService">
            <summary>
            Defines the page service methods used to obtain values from the current Umbraco page that can be used to
            replace placeholders defined on the form definition.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IPageService.GetPageElements">
            <summary>
            Gets the page elements for the current Umbraco page.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IPageService.GetPageElements(System.Int32)">
            <summary>
            Gets the page elements for the Umbraco page matchin the provided Id.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Services.IPrevalueSourceService">
            <summary>
            Defines the prevalue source service methods.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Services.IRecordReaderService">
            <summary>
            Defines the record (form submissions) reader source service methods.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IRecordReaderService.GetApprovedRecordsFromPage(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the approved records given an umbraco page id.
            </summary>
            <param name="pageId">The umbraco page id</param>
            <param name="pageNumber">The page number (1 based)</param>
            <param name="pageSize">The maximum number of results to return</param>
            <returns>The records that match the query</returns>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IRecordReaderService.GetApprovedRecordsFromFormOnPage(System.Int32,System.Guid,System.Int32,System.Int32)">
            <summary>
            Gets the approved records given an umbraco page id and a specific form id.
            </summary>
            <param name="pageId">The umbraco page id</param>
            <param name="formId">The form id</param>
            <param name="pageNumber">The page number (1 based)</param>
            <param name="pageSize">The maximum number of results to return</param>
            <returns>The records that match the query</returns>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IRecordReaderService.GetRecordsFromPage(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the approved or submitted records given an umbraco page id and a specific form id.
            </summary>
            <param name="pageId">The umbraco page id</param>
            <param name="pageNumber">The page number (1 based)</param>
            <param name="pageSize">The maximum number of results to return</param>
            <returns>The records that match the query</returns>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IRecordReaderService.GetRecordsFromFormOnPage(System.Int32,System.Guid,System.Int32,System.Int32)">
            <summary>
            Gets the approved or submitted records given an umbraco page id and a specific form id.
            </summary>
            <param name="pageId">The umbraco page id</param>
            <param name="formId">The form id</param>
            <param name="pageNumber">The page number (1 based)</param>
            <param name="pageSize">The maximum number of results to return</param>
            <returns>The records that match the query</returns>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IRecordReaderService.GetRecordsFromForm(System.Guid,System.Int32,System.Int32)">
            <summary>
            Gets the approved or submitted records given a specific form id.
            </summary>
            <param name="formId">The form id</param>
            <param name="pageNumber">The page number (1 based)</param>
            <param name="pageSize">The maximum number of results to return</param>
            <returns>The records that match the query</returns>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IRecordReaderService.GetApprovedRecordsFromForm(System.Guid,System.Int32,System.Int32)">
            <summary>
            Gets the approved records given a specific form id.
            </summary>
            <param name="formId">The form id</param>
            <param name="pageNumber">The page number (1 based)</param>
            <param name="pageSize">The maximum number of results to return</param>
            <returns>The records that match the query</returns>
        </member>
        <member name="T:Umbraco.Forms.Core.Services.IRecordService">
            <summary>
            Defines the record (form submissions) service methods.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IRecordService.Submit(Umbraco.Forms.Core.Persistence.Dtos.Record,Umbraco.Forms.Core.Models.Form)">
            <summary>
            Submits the form and (if configured) stores the associated record.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IRecordService.Approve(Umbraco.Forms.Core.Persistence.Dtos.Record,Umbraco.Forms.Core.Models.Form)">
            <summary>
            Approves the form and stores the associated record.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IRecordService.Delete(Umbraco.Forms.Core.Persistence.Dtos.Record,Umbraco.Forms.Core.Models.Form)">
            <summary>
            Deletes the record.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Umbraco.Forms.Core.Services.IRecordService.GetAllRecords(Umbraco.Forms.Core.Models.Form,System.Boolean)" -->
        <member name="T:Umbraco.Forms.Core.Services.IWorkflowEmailService">
            <summary>
            Defines the email workflow service methods.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IWorkflowEmailService.SendEmailAsync(Umbraco.Forms.Core.Services.SendEmailArgs)">
            <summary>
            Sends an email.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Services.IWorkflowExecutionService">
            <summary>
            Defines the workflow service methods (for execution).
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IWorkflowExecutionService.ExecuteWorkflows(Umbraco.Forms.Core.Persistence.Dtos.Record,Umbraco.Forms.Core.Models.Form,Umbraco.Forms.Core.Enums.FormState,System.Boolean)">
            <summary>
            Executes the workflows for the provided form and record.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Services.IWorkflowService">
            <summary>
            Defines the workflow service methods (for management).
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IWorkflowService.Insert(Umbraco.Forms.Core.Models.Form,Umbraco.Forms.Core.Interfaces.IWorkflow)">
            <summary>
            Attach the workflow to the form.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IWorkflowService.Insert(Umbraco.Forms.Core.Models.Form,System.Collections.Generic.IEnumerable{Umbraco.Forms.Core.Interfaces.IWorkflow})">
            <summary>
            Attach the workflows to the form.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Umbraco.Forms.Core.Services.IWorkflowService.Get(Umbraco.Forms.Core.Models.Form)" -->
        <!-- Badly formed XML comment ignored for member "M:Umbraco.Forms.Core.Services.IWorkflowService.GetActiveWorkFlows(Umbraco.Forms.Core.Models.Form,Umbraco.Forms.Core.Enums.FormState)" -->
        <member name="M:Umbraco.Forms.Core.Services.IWorkflowService.GetWorkflowType(System.Guid)">
            <summary>
            Returns a workflowtype
            </summary>
            <param name="workflowTypeId">The id for the workflow type</param>
            <returns> WorkflowType</returns>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IWorkflowService.Delete(Umbraco.Forms.Core.Models.Form)">
            <summary>
            Deletes all workflows attached to the form
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Services.IXmlService">
            <summary>
            Defines the XML service methods.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IXmlService.ToXml(Umbraco.Forms.Core.Persistence.Dtos.Record,System.Xml.XmlDocument)">
            <summary>
            Converts a record to XML and adds it to the provided XML document.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IXmlService.ToXml(Umbraco.Forms.Core.Persistence.Dtos.RecordField,System.Xml.XmlDocument)">
            <summary>
            Converts a record field to XML and adds it to the provided XML document.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IXmlService.ToXml(Umbraco.Forms.Core.Models.Form,System.Xml.XmlDocument)">
            <summary>
            Converts a form to XML and adds it to the provided XML document.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IXmlService.ToXml(Umbraco.Forms.Core.Models.Page,System.Xml.XmlDocument)">
            <summary>
            Converts a page to XML and adds it to the provided XML document.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IXmlService.ToXml(Umbraco.Forms.Core.Models.FieldSet,System.Xml.XmlDocument)">
            <summary>
            Converts a fieldset to XML and adds it to the provided XML document.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IXmlService.ToXml(Umbraco.Forms.Core.Models.FieldsetContainer,System.Xml.XmlDocument)">
            <summary>
            Converts a fieldset contains to XML and adds it to the provided XML document.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.IXmlService.ToXml(Umbraco.Forms.Core.Models.Field,System.Xml.XmlDocument)">
            <summary>
            Converts a field to XML and adds it to the provided XML document.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Services.Licensing.ILicensingService.TrialMessage">
            <summary>
            Trial license message.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Services.Licensing.ILicensingService.TrialSaveMessage">
            <summary>
            Checks whether the product is trial licensed.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.Licensing.ILicensingService.IsPreRelease">
            <summary>
            Checks whether the version of the product is a pre-release.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.Licensing.ILicensingService.IsTrial">
            <summary>
            Checks whether the product is trial licensed.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.Licensing.ILicensingService.IsInvalid">
            <summary>
            Checks if the product is not running with e valid licence..
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.Licensing.ILicensingService.LicenseLimitations">
            <summary>
            Gets the license limitation details.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.Licensing.ILicensingService.ValidDomains">
            <summary>
            Gets valid domains for the licence.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.Licensing.ILicensingService.TrialDaysLeft">
            <summary>
            Calculates the number of trial licence days remaining.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.Licensing.ILicensingService.IsLocalBrowserRequest">
            <summary>
            Checks if the current request is from a local development environment.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Services.Licensing.LicensingService">
            <summary>
            Provides messages and methods for validating the forms package is licenced.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.Licensing.LicensingService.IsTrial">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.Licensing.LicensingService.LicenseLimitations">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.Licensing.LicensingService.ValidDomains">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.Licensing.LicensingService.IsInvalid">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.Licensing.LicensingService.TrialDaysLeft">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.Licensing.LicensingService.IsLocalBrowserRequest">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.Licensing.LicensingService.IsLocalRequest(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Checks to see if a request is local.
            </summary>
            <remarks>
            Request.IsLocal is not available in .NET Core, so we need to look into the details of the request and connection.
            </remarks>
        </member>
        <member name="P:Umbraco.Forms.Core.Services.Notifications.FormValidateNotification.Form">
            <summary>
            Gets or sets the form.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Services.Notifications.FormValidateNotification.Context">
            <summary>
            Gets or sets the HTTP context.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Services.Notifications.FormValidateNotification.ModelState">
            <summary>
            Gets or sets the model state dictionary.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Services.Notifications.RecordStateChangeNotification.Form">
            <summary>
            Gets the associated form.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Services.Notifications.WorkflowExecutionFailedNotification.Exception">
            <summary>
            Gets or sets an exception for why the workflow failed, if available.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Services.PlaceholderParsingService">
            <summary>
            Provides helper methods for working with strings.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.PlaceholderParsingService.ParsePlaceHolders(System.String,Umbraco.Forms.Core.Persistence.Dtos.Record,Umbraco.Forms.Core.Models.Form,System.Collections.Hashtable)">
            <summary>
            Parses placeholders provided in a string with values from the form entry, page or member.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Services.PlaceholderParsingServiceExtensions">
            <summary>
            Provides additional helper methods for working with the <see cref="T:Umbraco.Forms.Core.Services.IPlaceholderParsingService"/>.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Services.PublishedContentPageService">
            <summary>
            Implementation of <see cref="T:Umbraco.Forms.Core.Services.IPageService"/> used to obtain values from the current Umbraco page that can be used to
            replace placeholders defined on the form definition.  This implementation avoids the use of database calls and replaces
            <see cref="!:PageService"/>.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Services.RecordExtensions">
            <summary>
            Provides extensions on <see cref="T:Umbraco.Forms.Core.Interfaces.IRecord"/>.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.RecordExtensions.ValueAsString(Umbraco.Forms.Core.Interfaces.IRecord,System.String)">
            <summary>
            Gets the value of the field matching the provided alias for the record, as a string.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Services.SendEmailArgs">
            <summary>
            Defines arguments for sending an email used in <see cref="T:Umbraco.Forms.Core.Services.IWorkflowEmailService"/>.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Services.SendEmailArgs.SenderEmail">
            <summary>
            Gets or sets the email address of the sender.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Services.SendEmailArgs.ReplyToEmail">
            <summary>
            Gets or sets the email address(es) of the reply to addresse(s).
            </summary>
            <remarks>
            If more than one address, string should be comma or semi-colon separated.
            </remarks>
        </member>
        <member name="P:Umbraco.Forms.Core.Services.SendEmailArgs.RecipientEmail">
            <summary>
            Gets or sets the email address(es) of the recipient(s).
            </summary>
            <remarks>
            If more than one address, string should be comma or semi-colon separated.
            </remarks>
        </member>
        <member name="P:Umbraco.Forms.Core.Services.SendEmailArgs.CcEmail">
            <summary>
            Gets or sets the email address(es) of the recipient(s) in CC.
            </summary>
            <remarks>
            If more than one address, string should be comma or semi-colon separated.
            </remarks>
        </member>
        <member name="P:Umbraco.Forms.Core.Services.SendEmailArgs.BccEmail">
            <summary>
            Gets or sets the email address(es) of the recipient(s) in BC.
            </summary>
            <remarks>
            If more than one address, string should be comma or semi-colon separated.
            </remarks>
        </member>
        <member name="P:Umbraco.Forms.Core.Services.SendEmailArgs.Subject">
            <summary>
            Gets or sets the subject of the email message.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Services.SendEmailArgs.Body">
            <summary>
            Gets or sets the body of the email message.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Services.SendEmailArgs.IsBodyHtml">
            <summary>
            Gets or sets a value indicating whether the body of the email is formatted as HTML.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Services.SendEmailArgs.Attachments">
            <summary>
            Gets or sets a collection of attachments to send along with the email message.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Services.WorkflowEmailService">
            <summary>
            Implements the email workflow service methods defined in <see cref="T:Umbraco.Forms.Core.Services.IWorkflowEmailService"/>.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.WorkflowEmailService.#ctor(Umbraco.Cms.Core.Mail.IEmailSender,Microsoft.Extensions.Options.IOptions{Umbraco.Cms.Core.Configuration.Models.ContentSettings},Microsoft.Extensions.Options.IOptions{Umbraco.Cms.Core.Configuration.Models.GlobalSettings},Microsoft.Extensions.Logging.ILogger{Umbraco.Forms.Core.Services.WorkflowEmailService})">
            <summary>
            Initializes a new instance of the <see cref="T:Umbraco.Forms.Core.Services.WorkflowEmailService"/> class.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Services.WorkflowEmailService.SendEmailAsync(Umbraco.Forms.Core.Services.SendEmailArgs)">
            <inheritdoc/>
        </member>
        <member name="T:Umbraco.Forms.Core.Enums.FieldConditionActionType">
            <summary>
            Enumeration for field condition display options.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Enums.FieldConditionActionType.Show">
            <summary>
            Show field.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Enums.FieldConditionActionType.Hide">
            <summary>
            Hide field.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Enums.FieldConditionLogicType">
            <summary>
            Enumeration for field condition logic matches.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Enums.FieldConditionLogicType.All">
            <summary>
            Matches all.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Enums.FieldConditionLogicType.Any">
            <summary>
            Matches any.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Enums.FieldConditionRuleOperator">
            <summary>
            Enumeration for field condition rule operators.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Enums.FieldConditionRuleOperator.Is">
            <summary>
            Is value.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Enums.FieldConditionRuleOperator.IsNot">
            <summary>
            Is not value.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Enums.FieldConditionRuleOperator.GreaterThen">
            <summary>
            Greater than value.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Enums.FieldConditionRuleOperator.LessThen">
            <summary>
            Less than value.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Enums.FieldConditionRuleOperator.Contains">
            <summary>
            Contains value.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Enums.FieldConditionRuleOperator.StartsWith">
            <summary>
            Starts with value.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Enums.FieldConditionRuleOperator.EndsWith">
            <summary>
            Ends with value.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Enums.FieldDataType">
            <summary>
            Enumeration for field data types.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Enums.FieldDataType.String">
            <summary>
            String type.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Enums.FieldDataType.LongString">
            <summary>
            Long string type.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Enums.FieldDataType.Integer">
            <summary>
            Integer type.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Enums.FieldDataType.DateTime">
            <summary>
            Date and time type.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Enums.FieldDataType.Bit">
            <summary>
            Bit/boolean type.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Enums.FormFieldIndication">
            <summary>
            Enumeration for field indications.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Enums.FormFieldIndication.NoIndicator">
            <summary>
            No indicator showmn.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Enums.FormFieldIndication.MarkMandatoryFields">
            <summary>
            Mark mandatory fields.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Enums.FormFieldIndication.MarkOptionalFields">
            <summary>
            Mark optional fields.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Enums.FormSecurityType">
            <summary>
            Enumeration for form security types.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Enums.FormSecurityType.Full">
            <summary>
            Full access.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Enums.FormSecurityType.ReadOnlyViewAndExportEntries">
            <summary>
            Readonly access with permission to view and export entries.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Enums.FormSecurityType.ReadOnlyViewEntries">
            <summary>
            Readonly access with permission to view entries.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Enums.FormState">
            <summary>
            Enumeration for form states.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Enums.FormState.Opened">
            <summary>
            Form opened.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Enums.FormState.Resumed">
            <summary>
            Form resumed.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Enums.FormState.PartiallySubmitted">
            <summary>
            Form partially submitted.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Enums.FormState.Submitted">
            <summary>
            Form submitted.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Enums.FormState.Approved">
            <summary>
            Form approved.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Enums.FormState.Deleted">
            <summary>
            Form deleted.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Enums.IncludeSensitiveData">
            <summary>
            Enumeration for inclusion of sensitive data.
            </summary>
            <remarks>
            Never send over email or slack unless the user has explicitly set it to true.
            </remarks>
        </member>
        <member name="F:Umbraco.Forms.Core.Enums.IncludeSensitiveData.False">
            <summary>
            Sensitive data should be omitted.
            </summary>
            <remarks>
            this is to help with legacy Forms, where this didn't exist
            </remarks>
        </member>
        <member name="F:Umbraco.Forms.Core.Enums.IncludeSensitiveData.True">
            <summary>
            Sensitive data can be sent.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Enums.IncludeSensitiveData.Undefined">
            <summary>
            Sensitive data handling is not defined.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Enums.RecordActionStatus">
            <summary>
            Enumeration for record action status values.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Enums.RecordActionStatus.Failed">
            <summary>
            Action failed.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Enums.RecordActionStatus.Warning">
            <summary>
            Action triggered warnings.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Enums.RecordActionStatus.Completed">
            <summary>
            Action completed successfully.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Enums.RecordSorting">
            <summary>
            Enumerates sorting options.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Enums.RecordSorting.Ascending">
            <summary>
            Sort ascending.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Enums.RecordSorting.Descending">
            <summary>
            Sort descending.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Enums.WorkflowExecutionStatus">
            <summary>
            Enumeration for workflow execution status values.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Enums.WorkflowExecutionStatus.Failed">
            <summary>
            Workflow execution failed.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Enums.WorkflowExecutionStatus.NotConfigured">
            <summary>
            Workflow not configured to run.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Enums.WorkflowExecutionStatus.Cancelled">
            <summary>
            Workflow cancelled.
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Enums.WorkflowExecutionStatus.Completed">
            <summary>
            Workflow completed successfully.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Exceptions.FormException">
            <summary>
            Custom exception for form related errors.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Exceptions.FormException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Umbraco.Forms.Core.Exceptions.FormException"/> class.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Exceptions.FormException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Umbraco.Forms.Core.Exceptions.FormException"/> class.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Exceptions.FormException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Umbraco.Forms.Core.Exceptions.FormException"/> class.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Exceptions.ProviderException">
            <summary>
            Custom section for provider exceptions.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Exceptions.ProviderException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Umbraco.Forms.Core.Exceptions.ProviderException"/> class.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.ExportType">
            <summary>
            Base class for export types.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.ExportType.MimeType">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.ExportType.Icon">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.ExportType.FileExtension">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Core.ExportType.ExportRecords(Umbraco.Forms.Core.Models.RecordExportFilter)">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Core.ExportType.ExportToFile(Umbraco.Forms.Core.Models.RecordExportFilter,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Umbraco.Forms.Core.Extensions.DictionaryExtensions">
            <summary>
            Provides extension methods on <see cref="!:IDictionary"/>.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Extensions.DictionaryExtensions.ParseSettingsPlaceholders(System.Collections.Generic.IDictionary{System.String,System.String},Umbraco.Forms.Core.Services.IPlaceholderParsingService,System.Collections.Generic.Dictionary{System.String,Umbraco.Forms.Core.Attributes.Setting})">
            <summary>
            Parses the string values of a dictionary replacing placeholders with values drawn from the HTTP and Umbraco context.
            </summary>
            <param name="settings">A dictionary containing the setting key and values to parse.</param>
            <param name="fieldTypeSettings">
            A dictionary containing the setting key and configuration details
            (only settings that are marked as supporting placeholders will be parsed).
            </param>
        </member>
        <member name="T:Umbraco.Forms.Core.Extensions.StringExtensions">
            <summary>
            Provides extension methods on <see cref="T:System.String" />.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Extensions.StringExtensions.ParsePlaceHolders(System.String,Umbraco.Forms.Core.Services.IPlaceholderParsingService,Umbraco.Forms.Core.Persistence.Dtos.Record,Umbraco.Forms.Core.Models.Form,System.Collections.Hashtable)">
            <summary>
            Parses a string replacing Umbraco Forms placeholders (magic strings) with values from the specified HTTP context, record, form and/or page elements.
            </summary>
            <param name="text">The text to parse.</param>
            <param name="placeholderParsingService">The placeholder parsing service.</param>
            <param name="record">The record.</param>
            <param name="form">The form.</param>
            <param name="pageElements">The page elements.</param>
            <returns>The parsed text.</returns>
        </member>
        <member name="T:Umbraco.Forms.Core.Extensions.UmbracoBuilderExtensions">
            <summary>
            Extension methods for <see cref="T:Umbraco.Cms.Core.DependencyInjection.IUmbracoBuilder"/> for the common Umbraco functionality
            </summary>
        </member>
        <member name="F:Umbraco.Forms.Core.Extensions.UmbracoDatabaseExtensions.s_tableNames">
            <summary>
            Holds a collection of all the Forms tables, which can be used to sanitise the parameter passed and used within SqlLite's
            pragma_table_info functions (that otherwise could be susceptable to SQL injection.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.FieldConditionEvaluation">
            <summary>
            Provides helper method for the evaluation of field conditional display rules.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.FieldConditionEvaluation.Test(Umbraco.Forms.Core.Models.FieldCondition,System.Collections.Generic.IDictionary{System.Guid,System.String},Umbraco.Forms.Core.Services.IPlaceholderParsingService)">
            <summary>
            Tests a condition basd on provided field values.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.FieldConditionEvaluation.IsCircular(Umbraco.Forms.Core.Models.FieldCondition,Umbraco.Forms.Core.Models.Form)">
            <summary>
            Checks to see if a condition is circular.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.FieldConditionEvaluation.IsVisible(Umbraco.Forms.Core.Models.FieldCondition,Umbraco.Forms.Core.Models.Form,System.Collections.Generic.IDictionary{System.Guid,System.String},Umbraco.Forms.Core.Services.IPlaceholderParsingService)">
            <summary>
            Checks to see if field should be visible based on provided condition, form and field values.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.FieldConditionEvaluation.HasCondition(Umbraco.Forms.Core.Interfaces.IConditioned)">
            <summary>
            Checks for an enabled conditions.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.FieldConditionEvaluation.TestRule(Umbraco.Forms.Core.Models.FieldConditionRule,System.Collections.Generic.IDictionary{System.Guid,System.String},Umbraco.Forms.Core.Services.IPlaceholderParsingService)">
            <summary>
            Tests a field condition rule.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.FieldPreValueSource">
            <summary>
            Defines a prevalue source.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.FieldPreValueSource.Id">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.FieldPreValueSource.Name">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.FieldPreValueSource.Settings">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.FieldPreValueSource.FieldPreValueSourceTypeId">
            <inheritdoc/>
        </member>
        <member name="T:Umbraco.Forms.Core.FieldPreValueSourceType">
            <summary>
            Abstract base class for field prevalue source types.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.FieldPreValueSourceType.FieldPreValueSource">
            <summary>
            Gets the field prevalue source.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.FieldPreValueSourceType.GetPreValues(Umbraco.Forms.Core.Models.Field,Umbraco.Forms.Core.Models.Form)">
            <summary>
            Gets the prevalues for a form field.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.FieldPreValueSourceType.ValidateSettings">
            <summary>
            Validates the prevalue source type settings.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.FieldPreValueSourceType.LoadSettings(Umbraco.Forms.Core.Interfaces.IFieldPreValueSource)">
            <summary>
            Loads the settings for a field prevalue source type.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.FieldPreValueSourceType.Settings">
            <summary>
            Gets the field prevalue source type settings.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.FieldType">
            <summary>
            Abstract base class for field types.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.FieldType.SupportsPreValues">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.FieldType.DataType">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.FieldType.SupportsUploadTypes">
            <summary>
            Gets or sets a value indicating whether the field type supports file upload.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.FieldType.SupportsMandatory">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.FieldType.SupportsRegex">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.FieldType.StoresData">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.FieldType.HideField">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.FieldType.HideLabel">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.FieldType.Rendered">
            <summary>
            Gets or sets a value indicating whether the field type is rendered.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.FieldType.RenderView">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.FieldType.EditView">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.FieldType.FieldTypeViewName">
            <summary>
            Gets or sets the Razor partial view name associated with the field type.
            </summary>
            <remarks>
            Use this to set the Razor partial view name.
            For example 'FieldType.Textarea.cshtml'
            </remarks>
        </member>
        <member name="P:Umbraco.Forms.Core.FieldType.Icon">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.FieldType.Category">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.FieldType.SortOrder">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Core.FieldType.RequiredJavascriptFiles(Umbraco.Forms.Core.Models.Field)">
            <summary>
            Retrieves the required JavaScript files for the field type.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.FieldType.RequiredPartialViews(Umbraco.Forms.Core.Models.Field)">
            <summary>
            Retrieves the required partials view files for the field type.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.FieldType.RequiredPartialViews(System.Func{System.String},Umbraco.Forms.Core.Models.Field)">
            <summary>
            Retrieves the required themed partial view files for the field type.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.FieldType.RequiredCssFiles(Umbraco.Forms.Core.Models.Field)">
            <summary>
            Retrieves the required CSS files for the field type.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.FieldType.RequiredJavascriptInitialization(Umbraco.Forms.Core.Models.Field)">
            <summary>
            Retrieves the required JavaScript initialization function for the field type.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.FieldType.GetDataType">
            <summary>
            Gets the underlying datatype for the field type.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.FieldType.GetDesignView">
            <summary>
            Retrieves the design view for the field type.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.FieldType.Settings">
            <summary>
            Gets the settings for the field type.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.FieldType.ValidateField(Umbraco.Forms.Core.Models.Form,Umbraco.Forms.Core.Models.Field,System.Collections.Generic.IEnumerable{System.Object},Microsoft.AspNetCore.Http.HttpContext,Umbraco.Forms.Core.Services.IPlaceholderParsingService,System.Collections.Generic.List{System.String})">
            <summary>
            Validates the provided values for the field type.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.FieldType.ValidateField(Umbraco.Forms.Core.Models.Form,Umbraco.Forms.Core.Models.Field,System.Collections.Generic.IEnumerable{System.Object},Microsoft.AspNetCore.Http.HttpContext,Umbraco.Forms.Core.Services.IPlaceholderParsingService)">
            <summary>
            Validates the provided values for the field type.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.FieldType.ProcessSubmittedValue(Umbraco.Forms.Core.Models.Field,System.Collections.Generic.IEnumerable{System.Object},Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Processes the submited values for the field type.
            </summary>
            <remarks>
            Triggered when the form's viewmodel has been posted back to the server and validation has passed.
            </remarks>
        </member>
        <member name="M:Umbraco.Forms.Core.FieldType.ConvertToRecord(Umbraco.Forms.Core.Models.Field,System.Collections.Generic.IEnumerable{System.Object},Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Converts the raw submitted values to a collection formatted for save as a record.
            </summary>
            <remarks>
            Triggered when values are transfered from the form to the record.
            </remarks>
        </member>
        <member name="M:Umbraco.Forms.Core.FieldType.ConvertFromRecord(Umbraco.Forms.Core.Models.Field,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Converts the saved values to a collection formatted for use in a form (for re-editing).
            </summary>
            <remarks>
            Triggered when values are transfered from the record to the form.
            </remarks>
        </member>
        <member name="M:Umbraco.Forms.Core.FieldType.ValidateSettings">
            <inheritdoc/>
        </member>
        <member name="T:Umbraco.Forms.Core.FormDataSource">
            <summary>
            Defines a data source.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.FormDataSource.Id">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.FormDataSource.Name">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.FormDataSource.Settings">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.FormDataSource.FormDataSourceTypeId">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.FormDataSource.Valid">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Core.FormDataSource.GetFormDataSourceType(Umbraco.Forms.Core.Providers.DataSourceTypeCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Core.FormDataSource.SetFormDataSourceType(Umbraco.Forms.Core.FormDataSourceType)">
            <inheritdoc/>
        </member>
        <member name="T:Umbraco.Forms.Core.FormDataSourceDefinition">
            <summary>
            Defines a form datasource definition.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.FormDataSourceDefinition.Id">
            <summary>
            Gets or sets the definition's Id.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.FormDataSourceDefinition.Mappings">
            <summary>
            Gets or sets the definition's mappings.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.FormDataSourceDefinition.GetMapping(System.String)">
            <summary>
            Retrieves a mapping from the definition for a specific field.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.FormDataSourceField">
            <summary>
            Defines a field for a form datasource.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.FormDataSourceField.Key">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.FormDataSourceField.Name">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.FormDataSourceField.PreValueKeyField">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.FormDataSourceField.PreValueValueField">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.FormDataSourceField.PreValueSource">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.FormDataSourceField.AvailablePreValueValueFields">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.FormDataSourceField.IsForeignKey">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.FormDataSourceField.Type">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.FormDataSourceField.AutoIncrement">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.FormDataSourceField.MaxLength">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.FormDataSourceField.Position">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.FormDataSourceField.IsPrimaryKey">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.FormDataSourceField.AllowNulls">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.FormDataSourceField.IsMandatory">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.FormDataSourceField.IsProtected">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.FormDataSourceField.FieldDataType">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.FormDataSourceField.IsBoolean">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.FormDataSourceField.IsNumeric">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.FormDataSourceField.IsDateTime">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.FormDataSourceField.IsString">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Core.FormDataSourceField.Create">
            <summary>
            Creates a new instance of a <see cref="T:Umbraco.Forms.Core.FormDataSourceField"/>.
            </summary>=
        </member>
        <member name="T:Umbraco.Forms.Core.FormDataSourceMapping">
            <summary>
            Defines a mapping for a form data source.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.FormDataSourceMapping.FormId">
            <summary>
            Gets or sets the mapping's form Id.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.FormDataSourceMapping.DataFieldKey">
            <summary>
            Gets or sets the mapping's data field key.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.FormDataSourceMapping.PrevalueKeyfield">
            <summary>
            Gets or sets the mapping's prevalue field key.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.FormDataSourceMapping.PrevalueValueField">
            <summary>
            Gets or sets the mapping's prevalue value field.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.FormDataSourceMapping.PrevalueTable">
            <summary>
            Gets or sets the mapping's prevalue table.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.FormDataSourceMapping.DataType">
            <summary>
            Gets or sets the mapping's data type.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.FormDataSourceMapping.DefaultValue">
            <summary>
            Gets or sets the mapping's default value.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.FormDataSourceType">
            <summary>
            Abstract base class for a form datasource type.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.FormDataSourceType.SupportsGetRecords">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.FormDataSourceType.SupportsInsert">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.FormDataSourceType.SupportsPreValues">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.FormDataSourceType.DataSource">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Core.FormDataSourceType.GetRecords(Umbraco.Forms.Core.Models.Form,System.Int32,System.Int32,System.Object,Umbraco.Forms.Core.Enums.RecordSorting)">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Core.FormDataSourceType.InsertRecord(Umbraco.Forms.Core.Persistence.Dtos.Record)">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Core.FormDataSourceType.GetAvailableFields">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Core.FormDataSourceType.GetMappedFields">
            <summary>
            Gets mapped fields for the datasource type.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.FormDataSourceType.GetPreValues(Umbraco.Forms.Core.Models.Field,Umbraco.Forms.Core.Models.Form)">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Core.FormDataSourceType.LoadSettings(Umbraco.Forms.Core.FormDataSource)">
            <summary>
            Loads the settings for the datasource type.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.FormDataSourceType.ValidateSettings">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Core.FormDataSourceType.Settings">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Core.FormDataSourceType.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:Umbraco.Forms.Core.FormsJsonSerializerSettings">
            <summary>
            Defines serialization settings used within the Forms package.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.FormsJsonSerializerSettings.Default">
            <summary>
            Gets the serialization settings used for all serialization operations carried out by the Forms package.
            </summary>
            <remarks>
            The settings used are the Json.NET defaults, but we should explicitly use them to avoid picking up
            settings defined globally in the solution where Forms is running.
            See: https://github.com/umbraco/Umbraco.Forms.Issues/issues/264
            </remarks>
        </member>
        <member name="T:Umbraco.Forms.Core.Healthchecks.DatabaseIntegrityHealthCheck">
            <summary>
            Provides a healthcheck for expected database integrity constraints and indexes.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Healthchecks.DatabaseIntegrityHealthCheck.#ctor(Umbraco.Cms.Infrastructure.Scoping.IScopeProvider,Umbraco.Cms.Infrastructure.Scoping.IScopeAccessor)">
            <summary>
            Initializes a new instance of the <see cref="T:Umbraco.Forms.Core.Healthchecks.DatabaseIntegrityHealthCheck"/> class.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Healthchecks.DatabaseIntegrityHealthCheck.GetStatus">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Core.Healthchecks.DatabaseIntegrityHealthCheck.ExecuteAction(Umbraco.Cms.Core.HealthChecks.HealthCheckAction)">
            <inheritdoc/>
        </member>
        <member name="T:Umbraco.Forms.Core.Interfaces.IConditioned">
            <summary>
            Defines methods for classes supporting conditions, <see cref="T:Umbraco.Forms.Core.Models.Field"/> and <see cref="T:Umbraco.Forms.Core.Models.FieldSet"/>.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IConditioned.Condition">
            <summary>
            Gets or sets the condition.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Interfaces.IExportType">
            <summary>
            Defines properties and methods for export of formd data.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IExportType.FileExtension">
            <summary>
            Gets or sets the file extension of export type.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IExportType.Icon">
            <summary>
            Gets or sets the icon for export type.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IExportType.MimeType">
            <summary>
            Gets the mime type of export type.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Interfaces.IExportType.ExportRecords(Umbraco.Forms.Core.Models.RecordExportFilter)">
            <summary>
            Exports records (submissions) for a form.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Interfaces.IExportType.ExportToFile(Umbraco.Forms.Core.Models.RecordExportFilter,System.String)">
            <summary>
            Exports records (submissions) for a form to a file.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Interfaces.IFieldPreValueCrudSupport">
            <summary>
            Defines methods on prevalues for CRUD operations.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Interfaces.IFieldPreValueCrudSupport.InsertValue(Umbraco.Forms.Core.Models.PreValue,Umbraco.Forms.Core.Models.Field,Umbraco.Forms.Core.Models.Form)">
            <summary>
            Inserts a prevalue for a form field.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Interfaces.IFieldPreValueCrudSupport.UpdateValue(Umbraco.Forms.Core.Models.PreValue,Umbraco.Forms.Core.Models.Field,Umbraco.Forms.Core.Models.Form)">
            <summary>
            Updates a prevalue for a form field.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Interfaces.IFieldPreValueCrudSupport.DeleteValue(Umbraco.Forms.Core.Models.PreValue,Umbraco.Forms.Core.Models.Field,Umbraco.Forms.Core.Models.Form)">
            <summary>
            Deletes a prevalue for a form field.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Interfaces.IFieldPreValueCrudSupport.SortValues(System.Guid,System.Collections.Generic.List{Umbraco.Forms.Core.Models.PreValue},Umbraco.Forms.Core.Models.Field,Umbraco.Forms.Core.Models.Form)">
            <summary>
            Sorts the prevalues for a form field.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Interfaces.IFieldPreValueSource">
            <summary>
            Defines a prevalue source.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IFieldPreValueSource.Settings">
            <summary>
            Gets or sets the settings for the prevalue source.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IFieldPreValueSource.FieldPreValueSourceTypeId">
            <summary>
            Gets or sets the source type Id of the prevalue source.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Interfaces.IFieldPreValueSourceType">
            <summary>
            Defines methods available on a prevalue source type.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Interfaces.IFieldPreValueSourceType.Settings">
            <summary>
            Settings for the prevalue source.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Interfaces.IFieldPreValueSourceType.GetPreValues(Umbraco.Forms.Core.Models.Field,Umbraco.Forms.Core.Models.Form)">
            <summary>
            Retrieve the prevalues for a form field.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Interfaces.IFieldPreValueSourceType.ValidateSettings">
            <summary>
            Validates the prevalue source settings.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Interfaces.IFieldType">
            <summary>
            Defines properties and methods for a field type.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IFieldType.Name">
            <summary>
            Gets or sets the name of the field type.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IFieldType.Id">
            <summary>
            Gets or sets the Id of the field type.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IFieldType.Icon">
            <summary>
            Gets or sets the icon of the field type.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IFieldType.RenderView">
            <summary>
            Gets or sets the view used for rendering the field type.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IFieldType.EditView">
            <summary>
            Gets or sets the angularjs view used for editing entries using the field in the back-office.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IFieldType.Category">
            <summary>
            Gets or sets the category of the field type.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IFieldType.SortOrder">
            <summary>
            Gets or sets the sort order of the field type.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IFieldType.DataType">
            <summary>
            Gets or sets the underlying data type of the field type.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IFieldType.SupportsPreValues">
            <summary>
            Gets or sets a value indicating whether the field type supports prevalues.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IFieldType.SupportsMandatory">
            <summary>
            Gets or sets a value indicating whether the field type supports mandatory validation.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IFieldType.SupportsRegex">
            <summary>
            Gets or sets a value indicating whether the field type supports validation by a regular expression.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IFieldType.StoresData">
            <summary>
            Gets a value indicating whether the field type stores data.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IFieldType.HideLabel">
            <summary>
            Gets or sets a value indicating whether the label for the field type should be hidden on display.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IFieldType.HideField">
            <summary>
            Gets or sets a value indicating whether the field for the field type should be hidden on display.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Interfaces.IFieldType.ValidateSettings">
            <summary>
            Validates the field type settings.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Interfaces.IFormDataSource">
            <summary>
            Defines properties and methods for a data source.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IFormDataSource.FormDataSourceTypeId">
            <summary>
            Gets or sets the form data source type Id.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IFormDataSource.Settings">
            <summary>
            Gets or sets the datasource settings.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Interfaces.IFormDataSource.GetFormDataSourceType(Umbraco.Forms.Core.Providers.DataSourceTypeCollection)">
            <summary>
            Gets a value for the datasource type.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Interfaces.IFormDataSource.SetFormDataSourceType(Umbraco.Forms.Core.FormDataSourceType)">
            <summary>
            Sets a value for the datasource type.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IFormDataSource.Valid">
            <summary>
            Gets or sets a value indicating whether the datasource is valid.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Interfaces.IFormDataSourceField">
            <summary>
            Defines properties for datasource fields (representing the underlying database or web service field).
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IFormDataSourceField.AutoIncrement">
            <summary>
            Gets or sets a value indicating whether the datasource field is an auto increment one.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IFormDataSourceField.Type">
            <summary>
            Gets or sets the datasource field's type.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IFormDataSourceField.FieldDataType">
            <summary>
            Gets the datasource field's underlying type.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IFormDataSourceField.IsBoolean">
            <summary>
            Gets a value indicating whether the datasource field is a boolean.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IFormDataSourceField.IsDateTime">
            <summary>
            Gets a value indicating whether the datasource field is a datetime.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IFormDataSourceField.IsNumeric">
            <summary>
            Gets a value indicating whether the datasource field is numeric.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IFormDataSourceField.IsString">
            <summary>
            Gets a value indicating whether the datasource field is a string.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IFormDataSourceField.IsForeignKey">
            <summary>
            Gets or sets a value indicating whether the datasource field is a foreign key.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IFormDataSourceField.IsMandatory">
            <summary>
            Gets or sets a value indicating whether the datasource field is required.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IFormDataSourceField.AllowNulls">
            <summary>
            Gets or sets a value indicating whether the datasource field allows nulls.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IFormDataSourceField.IsPrimaryKey">
            <summary>
            Gets or sets a value indicating whether the datasource field is a primary key.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IFormDataSourceField.IsProtected">
            <summary>
            Gets or sets a value indicating whether the datasource field is protected.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IFormDataSourceField.Key">
            <summary>
            Gets or sets the datasource field's key.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IFormDataSourceField.MaxLength">
            <summary>
            Gets or sets the maximum length of the datasource field.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IFormDataSourceField.Position">
            <summary>
            Gets or sets the position datasource field within the datasource.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IFormDataSourceField.Name">
            <summary>
            Gets or sets the name of the datasource field.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IFormDataSourceField.PreValueKeyField">
            <summary>
            Gets or sets the prevalue key field of the datasource field.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IFormDataSourceField.PreValueSource">
            <summary>
            Gets or sets the prevalue source of the datasource field.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IFormDataSourceField.PreValueValueField">
            <summary>
            Gets or sets the prevalue field of the datasource field.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IFormDataSourceField.AvailablePreValueValueFields">
            <summary>
            Gets or sets the available prevalue value fields.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Interfaces.IFormDataSourceType">
            <summary>
            Defines properties and methods for form datasource types.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IFormDataSourceType.SupportsGetRecords">
            <summary>
            Gets or sets a value indicating whether the datasource type supports retrieving records.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IFormDataSourceType.SupportsInsert">
            <summary>
            Gets or sets a value indicating whether the datasource type supports inserting records.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IFormDataSourceType.SupportsPreValues">
            <summary>
            Gets or sets a value indicating whether the datasource type supports prevalues.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IFormDataSourceType.DataSource">
            <summary>
            Gets the datasource associated with the datasource type.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Interfaces.IFormDataSourceType.GetAvailableFields">
            <summary>
            Gets all available fields for the datasource type.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Interfaces.IFormDataSourceType.GetPreValues(Umbraco.Forms.Core.Models.Field,Umbraco.Forms.Core.Models.Form)">
            <summary>
            Gets the datasource type's  prevalues for a form field.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Interfaces.IFormDataSourceType.GetRecords(Umbraco.Forms.Core.Models.Form,System.Int32,System.Int32,System.Object,Umbraco.Forms.Core.Enums.RecordSorting)">
            <summary>
            Gets the paged records (form submissions) for a datasource type associated with a form.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Interfaces.IFormDataSourceType.InsertRecord(Umbraco.Forms.Core.Persistence.Dtos.Record)">
            <summary>
            Inserts a record (form submission).
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Interfaces.IFormDataSourceType.Settings">
            <summary>
            Retrieves the datasource settings.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Interfaces.IFormDataSourceType.ValidateSettings">
            <summary>
            Validates the settings for a datasource type.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Interfaces.IFormObject">
            <summary>
            Base interface for objects associated with forms (e.g. <see cref="T:Umbraco.Forms.Core.Models.Field"/>, <see cref="T:Umbraco.Forms.Core.Models.Page"/>.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IFormObject.Id">
            <summary>
            Gets or sets the Id.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Interfaces.IRecord">
            <summary>
            Defines the properties related to a record (form submission).
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IRecord.Id">
            <summary>
            Gets or sets the record's integer Id.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IRecord.UniqueId">
            <summary>
            Gets or sets the record's unique Id.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IRecord.State">
            <summary>
            Gets or sets the record's submission state.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IRecord.Created">
            <summary>
            Gets or sets the record's created date.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IRecord.Updated">
            <summary>
            Gets or sets the record's updated date.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IRecord.Form">
            <summary>
            Gets or sets the record's associated form Id.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IRecord.CurrentPage">
            <summary>
            Gets or sets the record's current page.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IRecord.UmbracoPageId">
            <summary>
            Gets or sets the record's associated Umbraco page Id (the page on which the submitted form was hosted).
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IRecord.IP">
            <summary>
            Gets or sets the record's submitting IP address.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IRecord.MemberKey">
            <summary>
            Gets or sets the key for the member associated with the record.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IRecord.RecordFields">
            <summary>
            Gets or sets the record's fields.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Interfaces.IRecordActionType">
            <summary>
            Defines properties and methods for actions associated with a record.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IRecordActionType.Icon">
            <summary>
            Gets or sets the action's icons.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IRecordActionType.JsAction">
            <summary>
            Gets or sets the action's JavaSCript function.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Interfaces.IRecordActionType.Execute(Umbraco.Forms.Core.Persistence.Dtos.Record,Umbraco.Forms.Core.Models.Form)">
            <summary>
            Executes the action for the record and it's associated form.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Interfaces.IRecordField">
            <summary>
            Defines properties for record fields.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IRecordField.Key">
            <summary>
            Gets the record field's key.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IRecordField.Values">
            <summary>
            Gets or sets the record field's values.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IRecordField.Field">
            <summary>
            Gets or sets the record field's associated form field.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IRecordField.Record">
            <summary>
            Gets or sets the field's record's Id.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Interfaces.IRecordSetActionType">
            <summary>
            Defines properties and methods for actions associated with a record set.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IRecordSetActionType.Icon">
            <summary>
            Gets or sets the action's icons.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IRecordSetActionType.JsAction">
            <summary>
            Gets or sets the action's JavaSCript function.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Interfaces.IRecordSetActionType.Execute(System.Collections.Generic.List{Umbraco.Forms.Core.Persistence.Dtos.Record},Umbraco.Forms.Core.Models.Form)">
            <summary>
            Executes the action for the record set and it's associated form.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Interfaces.IType">
            <summary>
            Base interface for form objects.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IType.Id">
            <summary>
            Gets or sets the Id.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IType.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Interfaces.IWorkflow">
            <summary>
            Defines properties and methods available on a workflow.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IWorkflow.Active">
            <summary>
            Gets or sets a value indicating whether the workflow is active.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IWorkflow.IncludeSensitiveData">
            <summary>
            Gets or sets a value indicating whether sensitive data should be included.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IWorkflow.WorkflowTypeId">
            <summary>
            Gets or sets the workflow type Id.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IWorkflow.ExecutesOn">
            <summary>
            Gets or sets the action on which the workflow is executed.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IWorkflow.Form">
            <summary>
            Gets or sets the associate form.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IWorkflow.Settings">
            <summary>
            Gets or sets the workflow settings.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IWorkflow.SortOrder">
            <summary>
            Gets or sets the sort order.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IWorkflow.Deleted">
            <summary>
            Gets or sets a value indicating whether the workflow is deleted.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Interfaces.IWorkflow.ExcludeSensitiveData">
            <summary>
            Excludes sensitive data for the workflow.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Interfaces.IWorkflowType">
            <summary>
            Defines properties and methods available for workflow types.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IWorkflowType.Name">
            <summary>
            Gets the name of the workflow type.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IWorkflowType.Description">
            <summary>
            Gets the description of the workflow type.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IWorkflowType.Id">
            <summary>
            Gets the Id of the workflow type.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Interfaces.IWorkflowType.Workflow">
            <summary>
            Gets the associated workflow.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Interfaces.IWorkflowType.Execute(Umbraco.Forms.Core.WorkflowExecutionContext)">
            <summary>
            Executes the workflow type for a record.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Interfaces.IWorkflowType.Settings">
            <summary>
            Retrieves the workflow type's settings.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Interfaces.IWorkflowType.ValidateSettings">
            <summary>
            Validates the workflow type's settings.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Migrations.FormsMigrationBase">
            <summary>
            Provides common functionality for database migrations related to the forms package.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Migrations.FormsMigrationBase.#ctor(Umbraco.Cms.Core.Services.IPackagingService,Umbraco.Cms.Core.Services.IMediaService,Umbraco.Cms.Core.IO.MediaFileManager,Umbraco.Cms.Core.PropertyEditors.MediaUrlGeneratorCollection,Umbraco.Cms.Core.Strings.IShortStringHelper,Umbraco.Cms.Core.Services.IContentTypeBaseServiceProvider,Umbraco.Cms.Infrastructure.Migrations.IMigrationContext,Microsoft.Extensions.Options.IOptions{Umbraco.Cms.Core.Configuration.Models.PackageMigrationSettings})">
            <summary>
            Initializes a new instance of the <see cref="T:Umbraco.Forms.Core.Migrations.FormsMigrationBase"/> class.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Migrations.FormsMigrationBase.AddPrimaryKey``1(System.String,System.String)">
            <summary>
            Adds a single-column primary key to a table.
            </summary>
            <typeparam name="TDto">Type of table on which the primary key will be applied.</typeparam>
        </member>
        <member name="M:Umbraco.Forms.Core.Migrations.FormsMigrationBase.AddPrimaryKey``1(System.String,System.String[])">
            <summary>
            Adds a multipe-column primary key to a table.
            </summary>
            <typeparam name="TDto">Type of table on which the primary key will be applied.</typeparam>
        </member>
        <member name="M:Umbraco.Forms.Core.Migrations.FormsMigrationBase.AddForeignKey``2(System.String,System.String,System.String,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Linq.Expressions.Expression{System.Func{``1,System.Object}},System.Boolean)">
            <summary>
            Adds a foreign key constraint between two tables.
            </summary>
            <typeparam name="TFromDto">Type of table on which the foreign key will be applied.</typeparam>
            <typeparam name="TToDto">Type of table containing the referenced primary key.</typeparam>
        </member>
        <member name="M:Umbraco.Forms.Core.Migrations.FormsMigrationBase.AddIndex(System.String,System.String,System.String)">
            <summary>
            Adds an index to a column in a table.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Migrations.FormsMigrationBase.AddUniqueConstraint``1(System.String,System.String)">
            <summary>
            Adds an unique constraint to a column in a table.
            </summary>
            <typeparam name="TDto">Type of table on which the constraint will be applied.</typeparam>
        </member>
        <member name="M:Umbraco.Forms.Core.Migrations.FormsMigrationBase.AddUniqueConstraint``1(System.String,System.String[])">
            <summary>
            Adds an unique constraint to a set of columns in a table.
            </summary>
            <typeparam name="TDto">Type of table on which the constraint will be applied.</typeparam>
        </member>
        <member name="M:Umbraco.Forms.Core.Migrations.FormsMigrationBase.ContainsRecords``1">
            <summary>
            Checks if a table contains any records.
            </summary>
            <typeparam name="TDto">Type of table to check for records.</typeparam>
        </member>
        <member name="T:Umbraco.Forms.Core.Migrations.FormsMigrationPlan">
            <summary>
            Defines the migration plan for the forms package database tables.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Migrations.FormsMigrationPlan.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Umbraco.Forms.Core.Migrations.FormsMigrationPlan"/> class.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Migrations.FormsMigrationPlan.InitialState">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Migrations.FormsMigrationPlan.IgnoreCurrentState">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Core.Migrations.FormsMigrationPlan.DefinePlan">
            <summary>
            Defines the plan.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Migrations.V_10_0_0.InstallUmbracoForms">
            <summary>
            Database migration installing the Umbraco Forms schema and data required as per V10.0.
            This will install the same as will be in place on a database upgraded to the last minor release of V9.
            </summary>
            <remarks>
            We haven't been able to simply repeat all the steps that have been added through 8 and 9, as we've introduced tables
            that then need foreign keys added to existing tables in later steps, and we can't do that with SqlLite.
            Hence the steps have been reordered so we create all the necessary tables, contraints and indexes in one step,
            as defined on the DTOs.
            </remarks>
        </member>
        <member name="M:Umbraco.Forms.Core.Migrations.V_10_0_0.InstallUmbracoForms.#ctor(Umbraco.Cms.Core.Services.IPackagingService,Umbraco.Cms.Core.Services.IMediaService,Umbraco.Cms.Core.IO.MediaFileManager,Umbraco.Cms.Core.PropertyEditors.MediaUrlGeneratorCollection,Umbraco.Cms.Core.Strings.IShortStringHelper,Umbraco.Cms.Core.Services.IContentTypeBaseServiceProvider,Umbraco.Cms.Infrastructure.Migrations.IMigrationContext,Microsoft.Extensions.Options.IOptions{Umbraco.Cms.Core.Configuration.Models.PackageMigrationSettings},Umbraco.Cms.Core.Services.IUserService,Microsoft.Extensions.Hosting.IHostEnvironment,Microsoft.Extensions.Options.IOptions{Umbraco.Licensing.Settings.LicensingSettings},Umbraco.Cms.Core.Services.IMacroService,Umbraco.Cms.Infrastructure.Scoping.IScopeProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Umbraco.Forms.Core.Migrations.V_10_0_0.InstallUmbracoForms"/> class.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Migrations.V_10_0_0.InstallUmbracoForms.Migrate">
            <inheritdoc/>
        </member>
        <member name="T:Umbraco.Forms.Core.Models.AllowedUploadType">
            <summary>
            Defines a file type allowed for upload.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.AllowedUploadType.Type">
            <summary>
            Gets or sets the type of the file (e.g. txt, pdf).
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.AllowedUploadType.Name">
            <summary>
            Gets or sets the name of the file type.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.AllowedUploadType.Checked">
            <summary>
            Gets or sets a value indicating whether the type is allowed for upload.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Models.DataSourceEntity">
            <summary>
            Implements the datasource entity defined by <see cref="T:Umbraco.Forms.Core.Models.IDataSourceEntity"/>.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Models.DataSourceEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Umbraco.Forms.Core.Models.DataSourceEntity"/> class.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.DataSourceEntity.Name">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.DataSourceEntity.Settings">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.DataSourceEntity.FormDataSourceTypeId">
            <inheritdoc/>
        </member>
        <member name="T:Umbraco.Forms.Core.Models.Field">
            <summary>
            Defines a form field.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Field.Values">
            <summary>
            Gets or sets the field values.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Field.Caption">
            <summary>
            Gets or sets the field's caption.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Field.ToolTip">
            <summary>
            Gets or sets the field's tooltip.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Field.Placeholder">
            <summary>
            Gets or sets the field's placeholder.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Field.CssClass">
            <summary>
            Gets or sets the field's CSS class.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Field.Alias">
            <summary>
            Gets or sets the field's alias.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Field.Id">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Field.FieldTypeId">
            <summary>
            Gets or sets the field's type Id.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Field.PreValueSourceId">
            <summary>
            Gets or sets the field's prevalue source Id.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Field.DataSourceFieldKey">
            <summary>
            Gets or sets the field's data source field key.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Field.ContainsSensitiveData">
            <summary>
            Gets or sets a value indicating whether the field contains sensitive data.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Field.Mandatory">
            <summary>
            Gets or sets a value indicating whether the field's completion is required.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Field.RegEx">
            <summary>
            Gets or sets a regular expression against which the field will be validated.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Field.RequiredErrorMessage">
            <summary>
            Gets or sets the field's error message if it is required and fails validation.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Field.InvalidErrorMessage">
            <summary>
            Gets or sets the field's error message if it is fails validation against the provided regular expression.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Field.Condition">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Field.Settings">
            <summary>
            Gets or sets the field's settings.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Field.PreValues">
            <summary>
            Gets or sets the field's prevalues.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Field.AllowedUploadTypes">
            <summary>
            Gets or sets the field's allowed upload file types (if uploads for the field are supported).
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Field.AllowMultipleFileUploads">
            <summary>
            Gets or sets a value indicating whether multiple file uploads are allowed (if uploads for the field are supported).
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Models.FieldCondition">
            <summary>
            Defines a field condition.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.FieldCondition.Id">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.FieldCondition.Enabled">
            <summary>
            Gets or sets a value indicating whether the condition is enabled.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.FieldCondition.ActionType">
            <summary>
            Gets or sets the action (show/hide) to carry out when the condition is fulfilled.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.FieldCondition.LogicType">
            <summary>
            Gets or sets the matching logic (all/any) for the condition.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Umbraco.Forms.Core.Models.FieldCondition.Rules" -->
        <member name="T:Umbraco.Forms.Core.Models.FieldConditionRule">
            <summary>
            Defines a field condition rule.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.FieldConditionRule.Id">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.FieldConditionRule.Field">
            <summary>
            Gets or sets the associated field Id.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.FieldConditionRule.Operator">
            <summary>
            Gets or sets the operator used to combine the condition rule.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.FieldConditionRule.Value">
            <summary>
            Gets or sets the condition value.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Models.FieldSet">
            <summary>
            Defines a field set (set of fields within a page of a form).
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.FieldSet.Caption">
            <summary>
            Gets or sets the field set's caption.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.FieldSet.SortOrder">
            <summary>
            Gets or sets the field set's sort order.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.FieldSet.Id">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.FieldSet.Page">
            <summary>
            Gets or sets the field set's page.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.FieldSet.Containers">
            <summary>
            Gets or sets the field set's containers.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.FieldSet.Condition">
            <summary>
            Gets or sets the field set's condition.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Models.FieldsetContainer">
            <summary>
            Defines a field set container (form > page > field set > CONTAINER > field).
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.FieldsetContainer.Caption">
            <summary>
            Gets or sets the container's caption.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.FieldsetContainer.Width">
            <summary>
            Gets or sets the container's width.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.FieldsetContainer.Fields">
            <summary>
            Gets or sets the container's fields.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Models.Folder">
            <summary>
            Defines a folder (a container for forms).
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Folder.Id">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Folder.Name">
            <summary>
            Gets or sets the folder's name.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Folder.Created">
            <summary>
            Gets or sets the form's created date.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Folder.ParentId">
            <summary>
            Gets or sets the folder's parent's Id.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Models.FolderEntity">
            <summary>
            Implements the folder entity defined by <see cref="T:Umbraco.Forms.Core.Models.IFolderEntity"/>.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.FolderEntity.Name">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.FolderEntity.ParentKey">
            <inheritdoc/>
        </member>
        <member name="T:Umbraco.Forms.Core.Models.Form">
            <summary>
            Defines a form (FORM > page > field set > container > field).
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Models.Form.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Umbraco.Forms.Core.Models.Form"/> class.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Models.Form.#ctor(Umbraco.Forms.Core.Configuration.DefaultFormSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Umbraco.Forms.Core.Models.Form"/> class.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Form.Name">
            <summary>
            Gets or sets the form's name.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Form.Created">
            <summary>
            Gets or sets the form's created date.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Form.Pages">
            <summary>
            Gets or sets the form's pages.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Form.Id">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Form.FieldIndicationType">
            <summary>
            Gets or sets a value indicating how to highlight the form fields.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Form.Indicator">
            <summary>
            Gets or sets the form's indicator for highlighted (e.g. mandatory) fiields.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Form.ShowValidationSummary">
            <summary>
            Gets or sets a value indicating whether to show the validation summary.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Form.HideFieldValidation">
            <summary>
            Gets or sets a value indicating whether to hide field validation.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Form.RequiredErrorMessage">
            <summary>
            Gets or sets the form's validation message for required fields.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Form.InvalidErrorMessage">
            <summary>
            Gets or sets the form's validation message for invalid fields.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Form.MessageOnSubmit">
            <summary>
            Gets or sets the form's message to display on submission.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Form.GoToPageOnSubmit">
            <summary>
            Gets or sets the an ID for a page to go to following form submission.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Form.XPathOnSubmit">
            <summary>
            Gets or sets the form's destination XPath on submission,
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Form.ManualApproval">
            <summary>
            Gets or sets a value indicating whether manual approval is required for approval.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Form.StoreRecordsLocally">
            <summary>
            Gets or sets a value indicating whether to store records (form submissions) locally.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Form.AutocompleteAttribute">
            <summary>
            Gets or sets a value for the default autocomplete attribute applied to rendered forms.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Form.CssClass">
            <summary>
            Gets or sets the form's CSS class.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Form.DisableDefaultStylesheet">
            <summary>
            Gets or sets a value indicating whether to disable the default stylesheet.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Form.DataSource">
            <summary>
            Gets or sets the form's datasource.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Form.SubmitLabel">
            <summary>
            Gets or sets the form's submit button label.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Form.NextLabel">
            <summary>
            Gets or sets the form's next navigation label.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Form.PrevLabel">
            <summary>
            Gets or sets the form's previous navigation label.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Form.FolderId">
            <summary>
            Gets or sets the form's folder.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Form.AllFields">
            <summary>
            Gets all the form's fields.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Models.Form.GetFormFieldSummary">
            <summary>
            Gets a summary of the form's fields.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Models.Form.SetFieldAliases(Umbraco.Cms.Core.Strings.IShortStringHelper)">
            <summary>
            Set the alias for each each field in a form to a new value, if it is not already set.
            </summary>
            <param name="form">The form to loop over its fields.</param>
        </member>
        <member name="M:Umbraco.Forms.Core.Models.Form.HasDataSource">
            <summary>
            Checks if the form has a configured datasource.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Models.Form.EnsureFormStructureIds">
            <summary>
            Ensures that all form pages, fieldsets and fields on the form have an Id.
            </summary>
            <remarks>
            It's only pages really that may not, as the Id being populated was introduced here in 8.9/9/1.
            </remarks>
        </member>
        <member name="M:Umbraco.Forms.Core.Models.Form.RegenerateFormStructureIds">
            <summary>
            Updates all pages, fieldsets, fields and conditions on the form with a new Id.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Models.Form.ApplyNewFieldIdsToConditions(System.Collections.Generic.Dictionary{System.Guid,System.Guid})">
            <summary>
            Conditions are based on field Guid identifiers, so as these have been reset, we need to ensure
            the old fields Ids used in the condition rules are mapped to the new ones.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Models.Form.Clone">
            <inheritdoc/>
        </member>
        <member name="T:Umbraco.Forms.Core.Models.FormEntity">
            <summary>
            Implements the form entity defined by <see cref="T:Umbraco.Forms.Core.Models.IFormEntity"/>.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Models.FormFieldHtmlModel">
            <summary>
            Defines a form field model sent to the Razor template for parsing.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Models.FormFieldHtmlModel.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Umbraco.Forms.Core.Models.FormFieldHtmlModel"/> class.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.FormFieldHtmlModel.Alias">
            <summary>
            Gets the form field alias.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.FormFieldHtmlModel.Name">
            <summary>
            Gets or sets the form field name.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.FormFieldHtmlModel.FieldType">
            <summary>
            Gets or sets the form field type.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.FormFieldHtmlModel.FieldValue">
            <summary>
            Gets or sets the form field values.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Models.FormFieldHtmlModel.GetValue">
            <summary>
            Gets the value of the form field.
            If the field type is a multiple values type then it will only return the first item.
            Consider using <see cref="M:Umbraco.Forms.Core.Models.FormFieldHtmlModel.GetValues"/> instead.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Models.FormFieldHtmlModel.GetValues">
            <summary>
            Gets the values of the form field.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Models.FormsHtmlModel">
            <summary>
            Defines a model sent to the Razor template for parsing.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Models.FormsHtmlModel.#ctor(Umbraco.Forms.Core.Models.FormFieldHtmlModel[])">
            <summary>
            Initializes a new instance of the <see cref="T:Umbraco.Forms.Core.Models.FormsHtmlModel"/> class.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.FormsHtmlModel.FormId">
            <summary>
            Gets or sets the Guid id of the form
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.FormsHtmlModel.FormName">
            <summary>
            Gets or sets the name of the form.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.FormsHtmlModel.FormPageId">
            <summary>
            Gets or sets the Id of the page where the user submitted the form.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.FormsHtmlModel.FormPageUrl">
            <summary>
            Gets or sets the URL of the page where the user submitted the form.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.FormsHtmlModel.EntryUniqueId">
            <summary>
            Gets or sets the unique id of the entry
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.FormsHtmlModel.FormSubmittedOn">
            <summary>
            Gets or sets the date and time that the form was submitted.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.FormsHtmlModel.DynamicFields">
            <summary>
            Gets the record fields as dynamic fields
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.FormsHtmlModel.Fields">
            <summary>
            Gets the record fields as a list of <see cref="T:Umbraco.Forms.Core.Models.FormFieldHtmlModel"/>
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Models.FormsHtmlModel.GetValue(System.String)">
            <summary>
            Gets the value of a field.
            If the field type is a multiple values type then it will only return the first item.
            Consider using <see cref="M:Umbraco.Forms.Core.Models.FormsHtmlModel.GetValues(System.String)"/> instead.
            </summary>
            <param name="alias"> Alias of the field</param>
            <returns>Returns the value of the field. If no value then it returns null</returns>
        </member>
        <member name="M:Umbraco.Forms.Core.Models.FormsHtmlModel.GetValues(System.String)">
            <summary>
            Gets the values of a field
            </summary>
            <param name="alias">Alias of the field</param>
            <returns>Returns the values of the field as an array of object. If no values is then it returns null</returns>
        </member>
        <member name="M:Umbraco.Forms.Core.Models.FormsHtmlModel.ToDynamic(System.Collections.Generic.IDictionary{System.String,Umbraco.Forms.Core.Models.FormFieldHtmlModel})">
            <summary>ex
            Private method for converting the dictionary to an ExpandoObject
            so we can do things like @Model.DynamicFields.question for fields with one value
            or @Model.DynamicFields.questions[1] for fields with multiple values
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Models.FormTemplateBase">
            <summary>
            Defines a form template.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.FormTemplateBase.Alias">
            <summary>
            Gets or sets the template's alias.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.FormTemplateBase.Name">
            <summary>
            Gets or sets the template's name.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.FormTemplateBase.Description">
            <summary>
            Gets or sets the template's description.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Models.IDataSourceEntity">
            <summary>
            Defines properties and methods for a datasource entity.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.IDataSourceEntity.FormDataSourceTypeId">
            <summary>
            Gets or sets the form datasource type Id.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.IDataSourceEntity.Name">
            <summary>
            Gets or sets the datasource name.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.IDataSourceEntity.Settings">
            <summary>
            Gets or sets the datasource settings.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Models.IFolderEntity">
            <summary>
            Defines properties and methods for a folder entity.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.IFolderEntity.Name">
            <summary>
            Gets or sets the folder's name.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.IFolderEntity.ParentKey">
            <summary>
            Gets or sets the folder's parent folder's key.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Models.IFormEntity">
            <summary>
            Defines properties and methods for a form entity.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.IFormEntity.CssClass">
            <summary>
            Gets or sets the form's CSS class.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.IFormEntity.DataSource">
            <summary>
            Gets or sets the form's datasource.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.IFormEntity.DisableDefaultStylesheet">
            <summary>
            Gets or sets a value indicating whether to disable the default stylesheet.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.IFormEntity.FieldIndicationType">
            <summary>
            Gets or sets a value indicating how to highlight the form fields.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.IFormEntity.GoToPageOnSubmit">
            <summary>
            Gets or sets the an ID for a page to go to following form submission.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.IFormEntity.HideFieldValidation">
            <summary>
            Gets or sets a value indicating whether to hide field validation.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.IFormEntity.Indicator">
            <summary>
            Gets or sets the form's indicator for highlighted (e.g. mandatory) fiields.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.IFormEntity.InvalidErrorMessage">
            <summary>
            Gets or sets the form's message to display on submission.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.IFormEntity.ManualApproval">
            <summary>
            Gets or sets a value indicating whether manual approval is required for approval.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.IFormEntity.MessageOnSubmit">
            <summary>
            Gets or sets the message displayed on form submission.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.IFormEntity.Name">
            <summary>
            Gets or sets the form's name.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.IFormEntity.NextLabel">
            <summary>
            Gets or sets the form's next navigation label.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.IFormEntity.Pages">
            <summary>
            Gets or sets the form's pages.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.IFormEntity.PrevLabel">
            <summary>
            Gets or sets the form's previous navigation label.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.IFormEntity.RequiredErrorMessage">
            <summary>
            Gets or sets the form's validation message for required fields.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.IFormEntity.ShowValidationSummary">
            <summary>
            Gets or sets a value indicating whether to show the validation summary.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.IFormEntity.StoreRecordsLocally">
            <summary>
            Gets or sets a value indicating whether to store records (form submissions) locally.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.IFormEntity.AutocompleteAttribute">
            <summary>
            Gets or sets a value for the default autocomplete attribute applied to rendered forms.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.IFormEntity.SubmitLabel">
            <summary>
            Gets or sets the form's submit button label.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.IFormEntity.Workflows">
            <summary>
            Gets or sets the form's workflows.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.IFormEntity.XPathOnSubmit">
            <summary>
            Gets or sets the form's destination XPath on submission,
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.IFormEntity.FolderId">
            <summary>
            Gets or sets the form's folder.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Models.IPrevalueSourceEntity">
            <summary>
            Defines properties and methods for a prevalue entity.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.IPrevalueSourceEntity.Name">
            <summary>
            Gets or sets the prevalues's name.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.IPrevalueSourceEntity.Settings">
            <summary>
            Gets or sets the prevalues's settings.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.IPrevalueSourceEntity.FieldPreValueSourceTypeId">
            <summary>
            Gets or sets the prevalues's source type Id.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Models.IWorkflowEntity">
            <summary>
            Defines properties and methods for a workflow entity.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.IWorkflowEntity.Name">
            <summary>
            Gets or sets the workflow's name.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.IWorkflowEntity.FormId">
            <summary>
            Gets or sets the workflow's form Id.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.IWorkflowEntity.Active">
            <summary>
            Gets or sets a value indicating whether the workflow is active.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.IWorkflowEntity.IncludeSensitiveData">
            <summary>
            Gets or sets a value indicating whether the workflow includes sensitive data.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.IWorkflowEntity.WorkflowTypeId">
            <summary>
            Gets or sets the workflow's type Id.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.IWorkflowEntity.ExecutesOn">
            <summary>
            Gets or sets the event that the workflow executes on (e.g. opened, submitted) .
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.IWorkflowEntity.Settings">
            <summary>
            Gets or sets the workflow's settings.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.IWorkflowEntity.SortOrder">
            <summary>
            Gets or sets the workflow's sort order.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Models.Page">
            <summary>
            Defines a form page (form > PAGE > field set > container > field).
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Page.FieldSets">
            <summary>
            Gets or sets the page's fieldsets.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Page.Caption">
            <summary>
            Gets or sets the page's caption.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Page.SortOrder">
            <summary>
            Gets or sets the page's sort order.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Page.Id">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Page.Form">
            <summary>
            Gets or sets the page's form.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Page.ButtonCondition">
            <summary>
            Gets or sets the page's button display condition.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Models.Page.AllFields">
            <summary>
            Retrieves all fields for the page.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Models.PreValue">
            <summary>
            Defines a prevalue.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.PreValue.Id">
            <summary>
            Gets or sets the prevalue's Id.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.PreValue.Value">
            <summary>
            Gets or sets the prevalue's value.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.PreValue.SortOrder">
            <summary>
            Gets or sets the prevalue's sort order.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Models.PrevalueSourceEntity">
            <summary>
            Implements the form entity defined by <see cref="T:Umbraco.Forms.Core.Models.IPrevalueSourceEntity"/>.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.PrevalueSourceEntity.Name">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.PrevalueSourceEntity.Settings">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.PrevalueSourceEntity.FieldPreValueSourceTypeId">
            <inheritdoc/>
        </member>
        <member name="T:Umbraco.Forms.Core.Models.RecordExportFilter">
            <summary>
            Defines a record export filter.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.RecordExportFilter.ExportType">
            <summary>
            Gets or sets the export type.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Models.RecordFilter">
            <summary>
            Defines a record filter.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.RecordFilter.StartIndex">
            <summary>
            Gets or sets the filter's start index.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.RecordFilter.Length">
            <summary>
            Gets or sets the filter's number of records to include.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.RecordFilter.Form">
            <summary>
            Gets or sets the filter's form.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.RecordFilter.SortBy">
            <summary>
            Gets or sets the filter's sort by.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.RecordFilter.SortOrder">
            <summary>
            Gets or sets the filter's sort order.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.RecordFilter.StartDate">
            <summary>
            Gets or sets the filter's start date.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.RecordFilter.EndDate">
            <summary>
            Gets or sets the filter's end date.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.RecordFilter.Filter">
            <summary>
            Gets or sets the filter's value.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.RecordFilter.States">
            <summary>
            Gets or sets the filter's form states to include.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.RecordFilter.LocalTimeOffset">
            <summary>
            Gets or sets the filter's local time offset.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Models.RecordSetActionType">
            <summary>
            Defines a record set action type.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.RecordSetActionType.Icon">
            <summary>
            Gets or sets the action type's icon.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.RecordSetActionType.JsAction">
            <summary>
            Gets or sets the action type's JavaScript action.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.RecordSetActionType.NeedsConfirm">
            <summary>
            Gets or sets a value indicating whether the action needs confirmation.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.RecordSetActionType.ConfirmMessage">
            <summary>
            Gets or sets the action type's confirmation message.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.RecordSetActionType.IsAvailableForApprovedRecords">
            <summary>
            Gets or sets a value indicating whether the action should be available for approved records.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Models.RecordSetActionType.Execute(System.Collections.Generic.List{Umbraco.Forms.Core.Persistence.Dtos.Record},Umbraco.Forms.Core.Models.Form)">
            <summary>
            Executes the action for a given list of records for a form.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Models.RecordSetActionType.ValidateSettings">
            <summary>
            Validates the action type's settings.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Models.RecordSetActionType.LoadSettings(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Loads the action type's settings.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Models.RecordSetActionType.HasSettings">
            <summary>
            Checks if the acton type has settings defined.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Models.RecordSetActionType.Settings">
            <summary>
            Retrieves the action type's settings.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Models.Workflow">
            <summary>
            Defines a workflow for a form.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Workflow.Id">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Workflow.Name">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Workflow.Form">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Workflow.Active">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Workflow.IncludeSensitiveData">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Workflow.WorkflowTypeId">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Workflow.ExecutesOn">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Workflow.Settings">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Workflow.SortOrder">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.Workflow.Deleted">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Core.Models.Workflow.ExcludeSensitiveData">
            <inheritdoc/>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Umbraco.Forms.Core.Models.WorkflowEntity" -->
        <member name="P:Umbraco.Forms.Core.Models.WorkflowEntity.Name">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.WorkflowEntity.FormId">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.WorkflowEntity.Active">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.WorkflowEntity.IncludeSensitiveData">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.WorkflowEntity.WorkflowTypeId">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.WorkflowEntity.ExecutesOn">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.WorkflowEntity.Settings">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Models.WorkflowEntity.SortOrder">
            <inheritdoc/>
        </member>
        <member name="T:Umbraco.Forms.Core.Persistence.Dtos.BaseDto">
            <summary>
            Defines a base data transfer object used for persistance of form related entities when stored in the database.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.BaseDto.Id">
            <summary>
            Gets or sets the Id.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.BaseDto.Key">
            <summary>
            Gets or sets the item's Id.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.BaseDto.Name">
            <summary>
            Gets or sets the item's name.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.BaseDto.Definition">
            <summary>
            Gets or sets the item's definition.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.BaseDto.CreateDate">
            <summary>
            Gets or sets the item's created date.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.BaseDto.UpdateDate">
            <summary>
            Gets or sets the item's updated date.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Persistence.Dtos.DataSourceDto">
            <summary>
            Defines a data transfer object used for persistance of datasource entities when stored in the database.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Persistence.Dtos.FolderDto">
            <summary>
            Defines a data transfer object used for persistance of folder entities when stored in the database.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.FolderDto.ParentKey">
            <summary>
            Gets or sets the item's parent key.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Persistence.Dtos.FormDto">
            <summary>
            Defines a data transfer object used for persistance of form entities when stored in the database.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.FormDto.FolderKey">
            <summary>
            Gets or sets the form's folder's key.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Persistence.Dtos.FormSecurityBaseDto">
            <summary>
            Defines a base data transfer object used for persistance of form specific security settings.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.FormSecurityBaseDto.FormName">
            <summary>
            Gets or sets the form name.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.FormSecurityBaseDto.Fields">
            <summary>
            Gets or sets the form fields.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.FormSecurityBaseDto.HasAccess">
            <summary>
            Gets or sets a value indicating whether the user has access to the form.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.FormSecurityBaseDto.SecurityType">
            <summary>
            Gets or sets the form security type.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.FormSecurityBaseDto.AllowInEditor">
            <summary>
            Gets or sets a value indicating whether the form is allowed in the editor for the user.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.FormSecurityBaseDto.SecurityTypeInt">
            <summary>
            Gets or sets the security type.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Persistence.Dtos.IRecordFieldData">
            <summary>
            Defines properties for record field data.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.IRecordFieldData.Id">
            <summary>
            Gets or sets the Id.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.IRecordFieldData.Key">
            <summary>
            Gets or sets the key.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Persistence.Dtos.PrevalueSourceDto">
            <summary>
            Defines a data transfer object used for persistance of prevalue  entities when stored in the database.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Persistence.Dtos.Record">
            <summary>
            Defines a data transfer object used for persistance of records.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Dtos.Record.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Umbraco.Forms.Core.Persistence.Dtos.Record"/> class.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.Record.Id">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.Record.Form">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.Record.Created">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.Record.Updated">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.Record.State">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.Record.CurrentPage">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.Record.UmbracoPageId">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.Record.IP">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.Record.MemberKey">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.Record.UniqueId">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.Record.StateAsString">
            <summary>
            Gets or sets the record state as a string.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.Record.RecordData">
            <summary>
            Gets or sets the record data.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.Record.RecordFields">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Dtos.Record.GenerateRecordDataAsJson">
            <summary>
            Retrieves record data in JSON format.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Dtos.Record.GetRecordField(System.String)">
            <summary>
            Retrieves a record field by name.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Dtos.Record.GetRecordFieldByAlias(System.String)">
            <summary>
            Retrieves a record field by alias.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Dtos.Record.GetRecordFieldsByType(System.Guid)">
            <summary>
            Retrieves record fields by type.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Dtos.Record.GetRecordField(System.Guid)">
            <summary>
            Retrieves a record field by Id.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Dtos.Record.GetValues``1(System.String)">
            <summary>
            Get all values stored on field with given alias
            </summary>
            <typeparam name="T">The expected type of the value</typeparam>
            <param name="alias">Alias of the field storing the values</param>
            <returns>A collection of values of a field on the record</returns>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Dtos.Record.GetValue``1(System.String)">
            <summary>
            Get a single value from on a field with a given alias
            </summary>
            <typeparam name="T">Type of value to return</typeparam>
            <param name="alias">Alias of field containing the value</param>
            <returns>A single value of the given type</returns>
        </member>
        <member name="T:Umbraco.Forms.Core.Persistence.Dtos.RecordAudit">
            <summary>
            Defines a data transfer object used for persistance of record audit lines.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.RecordAudit.Id">
            <summary>
            Gets or sets the Id.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.RecordAudit.Record">
            <summary>
            Gets or sets the related record Id.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.RecordAudit.UpdatedOn">
            <summary>
            Gets or sets the datetime when the record was updated.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.RecordAudit.UpdatedBy">
            <summary>
            Gets or sets the id of the back-office user that updated the record (if null, update was made via
            the website front-end).
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Persistence.Dtos.RecordField">
            <summary>
            Defines a data transfer object used for persistance of record fields.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Dtos.RecordField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Umbraco.Forms.Core.Persistence.Dtos.RecordField"/> class.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Dtos.RecordField.#ctor(Umbraco.Forms.Core.Models.Field)">
            <summary>
            Initializes a new instance of the <see cref="T:Umbraco.Forms.Core.Persistence.Dtos.RecordField"/> class.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.RecordField.Key">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.RecordField.FieldId">
            <summary>
            Gets or sets the related form field Id.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.RecordField.Record">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.RecordField.Alias">
            <summary>
            Gets or sets the record field's alias.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.RecordField.DataTypeAlias">
            <summary>
            Gets or sets the record field's date typealias.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.RecordField.Values">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.RecordField.Field">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Dtos.RecordField.HasValue">
            <summary>
            Checks to see if values are associated with the record field.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Dtos.RecordField.ValuesAsString(System.Boolean)">
            <summary>
            Converts the values to a comma separate string.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Persistence.Dtos.RecordFieldDataBit">
            <summary>
            Defines a data transfer object used for persistance of record data for bit/boolean fields.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.RecordFieldDataBit.Id">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.RecordFieldDataBit.Key">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.RecordFieldDataBit.Value">
            <summary>
            Gets or sets a value indicating whether the value is true (checked).
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Persistence.Dtos.RecordFieldDataDateTime">
            <summary>
            Defines a data transfer object used for persistance of record data for datetime fields.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.RecordFieldDataDateTime.Id">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.RecordFieldDataDateTime.Key">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.RecordFieldDataDateTime.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Persistence.Dtos.RecordFieldDataInteger">
            <summary>
            Defines a data transfer object used for persistance of record data for integer fields.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.RecordFieldDataInteger.Id">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.RecordFieldDataInteger.Key">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.RecordFieldDataInteger.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Persistence.Dtos.RecordFieldDataLongString">
            <summary>
            Defines a data transfer object used for persistance of record data for long string fields.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.RecordFieldDataLongString.Id">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.RecordFieldDataLongString.Key">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.RecordFieldDataLongString.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Persistence.Dtos.RecordFieldDataString">
            <summary>
            Defines a data transfer object used for persistance of record data for string fields.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.RecordFieldDataString.Id">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.RecordFieldDataString.Key">
            <inheritdoc/>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.RecordFieldDataString.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Persistence.Dtos.RecordFieldValue">
            <summary>
            Defines a data transfer object used for persistance of record field values.
            </summary>
            <remarks>
            TODO: Seems like this is unused?
            </remarks>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.RecordFieldValue.Id">
            <summary>
            Gets or sets the record field value's Id.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.RecordFieldValue.Key">
            <summary>
            Gets or sets the record field value's key.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.RecordFieldValue.StringValue">
            <summary>
            Gets or sets the record field value's string value.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.RecordFieldValue.BooleanValue">
            <summary>
            Gets or sets a value indicating whether the value is true (checked).
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.RecordFieldValue.DateTimeValue">
            <summary>
            Gets or sets the record field value's date time value.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.RecordFieldValue.IntegerValue">
            <summary>
            Gets or sets the record field value's integer value.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Persistence.Dtos.SecurityBaseDto">
            <summary>
            Defines a base DTO for security settings for the forms package.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.SecurityBaseDto.ManageDataSources">
            <summary>
            Gets or sets a value indicating whether the datasources can be managed.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.SecurityBaseDto.ManagePreValueSources">
            <summary>
            Gets or sets a value indicating whether prevalue sources can be managed.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.SecurityBaseDto.ManageWorkflows">
            <summary>
            Gets or sets a value indicating whether workflows can be managed.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.SecurityBaseDto.ManageForms">
            <summary>
            Gets or sets a value indicating whether forms can be managed.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.SecurityBaseDto.ViewEntries">
            <summary>
            Gets or sets a value indicating whether entries can be viewed via the back-office.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.SecurityBaseDto.EditEntries">
            <summary>
            Gets or sets a value indicating whether entries can be edited via the back-office.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Persistence.Dtos.UserFormSecurity">
            <summary>
            Defines a data transfer object used for persistance of user/form security settings.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.UserFormSecurity.Id">
            <summary>
            Gets or sets the Id.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.UserFormSecurity.User">
            <summary>
            Gets or sets the user.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.UserFormSecurity.Form">
            <summary>
            Gets or sets the form.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Dtos.UserFormSecurity.Create">
            <summary>
            Instantiates a new <see cref="T:Umbraco.Forms.Core.Persistence.Dtos.UserFormSecurity"/> instance.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Persistence.Dtos.UserGroupFormSecurity">
            <summary>
            Defines a data transfer object used for persistance of user/form security settings.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.UserGroupFormSecurity.Id">
            <summary>
            Gets or sets the Id.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.UserGroupFormSecurity.UserGroupId">
            <summary>
            Gets or sets the user.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.UserGroupFormSecurity.Form">
            <summary>
            Gets or sets the form.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Dtos.UserGroupFormSecurity.Create">
            <summary>
            Instantiates a new <see cref="T:Umbraco.Forms.Core.Persistence.Dtos.UserFormSecurity"/> instance.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Persistence.Dtos.UserGroupSecurity">
            <summary>
            Defines user security settings for the forms package.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.UserGroupSecurity.UserGroupId">
            <summary>
            Gets or sets the user group.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Dtos.UserGroupSecurity.Create">
            <summary>
            Creates a new <see cref="T:Umbraco.Forms.Core.Persistence.Dtos.UserGroupSecurity"/> instance.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Persistence.Dtos.UserGroupStartFolder">
            <summary>
            Defines user security settings for the forms package.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.UserGroupStartFolder.UserGroupId">
            <summary>
            Gets or sets the user Id.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.UserGroupStartFolder.FolderKey">
            <summary>
            Gets or sets the folder Id
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Persistence.Dtos.UserSecurity">
            <summary>
            Defines user security settings for the forms package.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.UserSecurity.User">
            <summary>
            Gets or sets the user.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Dtos.UserSecurity.Create">
            <summary>
            Creates a new <see cref="T:Umbraco.Forms.Core.Persistence.Dtos.UserSecurity"/> instance.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Persistence.Dtos.UserStartFolder">
            <summary>
            Defines user security settings for the forms package.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.UserStartFolder.UserId">
            <summary>
            Gets or sets the user Id.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.UserStartFolder.FolderKey">
            <summary>
            Gets or sets the folder Id
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Persistence.Dtos.WorkflowDto">
            <summary>
            Defines a data transfer object used for persistance of workflow entities when stored in the database.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Dtos.WorkflowDto.FormId">
            <summary>
            Gets or sets the related form's Id.
            </summary>
            <remarks>
            Implicit FK to FormDto Key.
            </remarks>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Factories.DataSourceFactory.BuildEntities(System.Collections.Generic.IEnumerable{Umbraco.Forms.Core.Persistence.Dtos.DataSourceDto})">
            <inheritdoc />
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Factories.DataSourceFactory.BuildEntity(Umbraco.Forms.Core.Persistence.Dtos.DataSourceDto)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Factories.DataSourceFactory.BuildDto(Umbraco.Forms.Core.Models.IDataSourceEntity)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Factories.FolderFactory.BuildEntities(System.Collections.Generic.IEnumerable{Umbraco.Forms.Core.Persistence.Dtos.FolderDto})">
            <inheritdoc />
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Factories.FolderFactory.BuildEntity(Umbraco.Forms.Core.Persistence.Dtos.FolderDto)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Factories.FolderFactory.BuildDto(Umbraco.Forms.Core.Models.IFolderEntity)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Factories.FormFactory.BuildEntities(System.Collections.Generic.IEnumerable{Umbraco.Forms.Core.Persistence.Dtos.FormDto})">
            <inheritdoc />
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Factories.FormFactory.BuildEntity(Umbraco.Forms.Core.Persistence.Dtos.FormDto)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Factories.FormFactory.BuildDto(Umbraco.Forms.Core.Models.IFormEntity)">
            <inheritdoc />
        </member>
        <member name="T:Umbraco.Forms.Core.Persistence.Factories.IDataSourceFactory">
            <summary>
            Defines methods for the instantiation of datasource entities from DTOs (and vice versa).
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Factories.IDataSourceFactory.BuildDto(Umbraco.Forms.Core.Models.IDataSourceEntity)">
            <summary>
            Builds a datasource DTO from the provided entity.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Factories.IDataSourceFactory.BuildEntities(System.Collections.Generic.IEnumerable{Umbraco.Forms.Core.Persistence.Dtos.DataSourceDto})">
            <summary>
            Builds a collection of datasource entities from the provided DTOs.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Factories.IDataSourceFactory.BuildEntity(Umbraco.Forms.Core.Persistence.Dtos.DataSourceDto)">
            <summary>
            Builds a datasource entity from the provided DTO.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Persistence.Factories.IFolderFactory">
            <summary>
            Defines methods for the instantiation of folder entities from DTOs (and vice versa).
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Factories.IFolderFactory.BuildDto(Umbraco.Forms.Core.Models.IFolderEntity)">
            <summary>
            Builds a form DTO from the provided entity.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Factories.IFolderFactory.BuildEntities(System.Collections.Generic.IEnumerable{Umbraco.Forms.Core.Persistence.Dtos.FolderDto})">
            <summary>
            Builds a collection of folder entities from the provided DTOs.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Factories.IFolderFactory.BuildEntity(Umbraco.Forms.Core.Persistence.Dtos.FolderDto)">
            <summary>
            Builds a folder entity from the provided DTO.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Persistence.Factories.IFormFactory">
            <summary>
            Defines methods for the instantiation of form entities from DTOs (and vice versa).
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Factories.IFormFactory.BuildDto(Umbraco.Forms.Core.Models.IFormEntity)">
            <summary>
            Builds a form DTO from the provided entity.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Factories.IFormFactory.BuildEntities(System.Collections.Generic.IEnumerable{Umbraco.Forms.Core.Persistence.Dtos.FormDto})">
            <summary>
            Builds a collection of form entities from the provided DTOs.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Factories.IFormFactory.BuildEntity(Umbraco.Forms.Core.Persistence.Dtos.FormDto)">
            <summary>
            Builds a form entity from the provided DTO.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Persistence.Factories.IPrevalueSourceFactory">
            <summary>
            Defines methods for the instantiation of prevalue entities from DTOs (and vice versa).
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Factories.IPrevalueSourceFactory.BuildDto(Umbraco.Forms.Core.Models.IPrevalueSourceEntity)">
            <summary>
            Builds a prevalue source DTO from the provided entity.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Factories.IPrevalueSourceFactory.BuildEntities(System.Collections.Generic.IEnumerable{Umbraco.Forms.Core.Persistence.Dtos.PrevalueSourceDto})">
            <summary>
            Builds a collection of prevalue source entities from the provided DTOs.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Factories.IPrevalueSourceFactory.BuildEntity(Umbraco.Forms.Core.Persistence.Dtos.PrevalueSourceDto)">
            <summary>
            Builds a prevalue source entity from the provided DTO.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Persistence.Factories.IWorkflowFactory">
            <summary>
            Defines methods for the instantiation of workflow entities from DTOs (and vice versa).
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Factories.IWorkflowFactory.BuildDto(Umbraco.Forms.Core.Models.IWorkflowEntity)">
            <summary>
            Builds a workflow DTO from the provided entity.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Factories.IWorkflowFactory.BuildEntity(Umbraco.Forms.Core.Persistence.Dtos.WorkflowDto)">
            <summary>
            Builds a workflow entity from the provided DTO.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Factories.IWorkflowFactory.BuildDtos(System.Collections.Generic.IEnumerable{Umbraco.Forms.Core.Models.IWorkflowEntity})">
            <summary>
            Builds a collection of workflow DTOs from the provided entities.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Factories.IWorkflowFactory.BuildEntities(System.Collections.Generic.IEnumerable{Umbraco.Forms.Core.Persistence.Dtos.WorkflowDto})">
            <summary>
            Builds a collection of workflow entities from the provided DTOs.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Factories.PrevalueSourceFactory.BuildEntities(System.Collections.Generic.IEnumerable{Umbraco.Forms.Core.Persistence.Dtos.PrevalueSourceDto})">
            <inheritdoc />
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Factories.PrevalueSourceFactory.BuildEntity(Umbraco.Forms.Core.Persistence.Dtos.PrevalueSourceDto)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Factories.PrevalueSourceFactory.BuildDto(Umbraco.Forms.Core.Models.IPrevalueSourceEntity)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Factories.WorkflowFactory.BuildEntities(System.Collections.Generic.IEnumerable{Umbraco.Forms.Core.Persistence.Dtos.WorkflowDto})">
            <inheritdoc />
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Factories.WorkflowFactory.BuildDtos(System.Collections.Generic.IEnumerable{Umbraco.Forms.Core.Models.IWorkflowEntity})">
            <inheritdoc />
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Factories.WorkflowFactory.BuildEntity(Umbraco.Forms.Core.Persistence.Dtos.WorkflowDto)">
            <inheritdoc />
        </member>
        <member name="T:Umbraco.Forms.Core.Persistence.Repositories.IDataSourceRepository">
            <summary>
            Defines methods available on repository for datasources.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Persistence.Repositories.IFolderRepository">
            <summary>
            Defines methods available on repository for forms.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Repositories.IFolderRepository.GetAtRoot">
            <summary>
            Retrieves a collection of <see cref="T:Umbraco.Forms.Core.Models.IFolderEntity"/> instances at the root.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Repositories.IFolderRepository.GetChildren(System.Guid)">
            <summary>
            Retrieves a collection of <see cref="T:Umbraco.Forms.Core.Models.IFolderEntity"/> instances that are children of the provided parent.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Repositories.IFolderRepository.ExistsAndIsEmpty(System.Guid)">
            <summary>
            Checks to see if the folder for the provided id exists and is empty.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Persistence.Repositories.IFormRepository">
            <summary>
            Defines methods available on repository for forms.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Repositories.IFormRepository.GetAtRoot">
            <summary>
            Retrieves a collection of <see cref="T:Umbraco.Forms.Core.Models.IFormEntity"/> instances at the root.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Repositories.IFormRepository.GetFromFolder(System.Guid)">
            <summary>
            Retrieves a collection of <see cref="T:Umbraco.Forms.Core.Models.IFormEntity"/> instances that are children of the provided parent folder.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Persistence.Repositories.IPrevalueSourceRepository">
            <summary>
            Defines methods available on repository for prevalue sources.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Persistence.Repositories.IWorkflowRepository">
            <summary>
            Defines methods available on repository for workflows.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Repositories.IWorkflowRepository.GetFor(Umbraco.Forms.Core.Models.Form)">
            <summary>
            Retrieves a collection of <see cref="T:Umbraco.Forms.Core.Models.IWorkflowEntity"/> instances for a provided form.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Persistence.Schema.Analyzers.MsSqlAnalyzer">
            <summary>
            Analyser for MSSQL databases when used as a datasource for a form.
            </summary>
            <remarks>
            Useful method reference for GetSchema method: https://www.devart.com/dotconnect/sugarcrm/docs/Metadata-GetSchema.html
            </remarks>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Schema.Analyzers.MsSqlAnalyzer.#ctor(Umbraco.Cms.Infrastructure.Scoping.IScopeProvider,Umbraco.Cms.Infrastructure.Scoping.IScopeAccessor,Microsoft.Extensions.Logging.ILogger{Umbraco.Forms.Core.Persistence.Schema.Analyzers.MsSqlAnalyzer})">
            <summary>
            Initializes a new instance of the <see cref="T:Umbraco.Forms.Core.Persistence.Schema.Analyzers.MsSqlAnalyzer"/> class.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Schema.Analyzers.MsSqlAnalyzer.#ctor(System.String,Microsoft.Extensions.Logging.ILogger{Umbraco.Forms.Core.Persistence.Schema.Analyzers.MsSqlAnalyzer})">
            <summary>
            Initializes a new instance of the <see cref="T:Umbraco.Forms.Core.Persistence.Schema.Analyzers.MsSqlAnalyzer"/> class.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Schema.Analyzers.MsSqlAnalyzer.GetTable(System.String)">
            <summary>
            Retrieves a <see cref="T:Umbraco.Forms.Core.Persistence.Schema.DatabaseTable"/> from a provided table name.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Schema.Analyzers.MsSqlAnalyzer.GetSqlForeignKeys(System.String)">
            <summary>
            Fetches schema information on foreign keys.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Schema.Analyzers.MsSqlAnalyzer.SqlToNetTypeConverter(System.String)">
            <summary>
            Converts the Data Type Interger to real .NET datatypes.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Schema.Analyzers.MsSqlAnalyzer.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:Umbraco.Forms.Core.Persistence.Schema.DatabaseColumn">
            <summary>
            Defines a database column used by the <see cref="T:Umbraco.Forms.Core.Persistence.Schema.Analyzers.MsSqlAnalyzer"/>.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Schema.DatabaseColumn.IsReadOnly">
            <summary>
            Gets or sets a value indicating whether the column is read only.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Schema.DatabaseColumn.IsForeignKey">
            <summary>
            Gets or sets a value indicating whether the column is a foreign key.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Schema.DatabaseColumn.Type">
            <summary>
            Gets or sets the column's type.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Schema.DatabaseColumn.MaxLength">
            <summary>
            Gets or sets the column's maxlength.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Schema.DatabaseColumn.AllowNulls">
            <summary>
            Gets or sets a value indicating whether the column allows nulls.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Schema.DatabaseColumn.AutoIncrement">
            <summary>
            Gets or sets a value indicating whether the column is an autoincrement.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Schema.DatabaseColumn.NumberScale">
            <summary>
            Gets or sets the column's numeric scale.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Schema.DatabaseColumn.NumericPrecision">
            <summary>
            Gets or sets the column's numeric precision.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Schema.DatabaseColumn.IsPrimaryKey">
            <summary>
            Gets or sets a value indicating whether the column is a primary key.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Schema.DatabaseColumn.DefaultSetting">
            <summary>
            Gets or sets the column's default value.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Schema.DatabaseColumn.Name">
            <summary>
            Gets or sets the column's name.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Schema.DatabaseColumn.Schema">
            <summary>
            Gets or sets the column's schema.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Schema.DatabaseColumn.PropertyName">
            <summary>
            Gets or sets the column's property name.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Schema.DatabaseColumn.PrimaryKeyTable">
            <summary>
            Gets or sets the column's primary key table.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Schema.DatabaseColumn.PrimaryKeyColumn">
            <summary>
            Gets or sets the column's primary key column.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Schema.DatabaseColumn.IsNumeric">
            <summary>
            Gets a value indicating whether the column is numeric.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Schema.DatabaseColumn.IsDateTime">
            <summary>
            Gets a value indicating whether the column is a datetime.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Schema.DatabaseColumn.IsString">
            <summary>
            Gets a value indicating whether the column is a string.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Persistence.Schema.DatabaseTable">
            <summary>
            Defines a database table used by the <see cref="!:MsSqlAnalyzer"/>.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Schema.DatabaseTable.PrimaryKeys">
            <summary>
            Gets a collection of <see cref="T:Umbraco.Forms.Core.Persistence.Schema.DatabaseColumn"/> that represent the table's primary key.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Schema.DatabaseTable.HasPrimaryKey">
            <summary>
            Gets a value indicating whether the table has a primary key.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Schema.DatabaseTable.PrimaryKey">
            <summary>
            Gets a single <see cref="T:Umbraco.Forms.Core.Persistence.Schema.DatabaseColumn"/> representing the table's primary key.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Schema.DatabaseTable.Descriptor">
            <summary>
            Gets a single <see cref="T:Umbraco.Forms.Core.Persistence.Schema.DatabaseColumn"/> used to describe the table.
            </summary>
            <remarks>
            The first string based, non-key table will be returned.
            </remarks>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Schema.DatabaseTable.SchemaName">
            <summary>
            Gets or sets the table's schema name.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Schema.DatabaseTable.Name">
            <summary>
            Gets or sets the table's name.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Schema.DatabaseTable.FriendlyName">
            <summary>
            Gets or sets the table's friendly name.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Schema.DatabaseTable.ClassName">
            <summary>
            Gets or sets the table's class name.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Persistence.Schema.DatabaseTable.Columns">
            <summary>
            Gets or sets the table's columns.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Persistence.Schema.DatabaseTable.GetColumn(System.String)">
            <summary>
            Retrieves a <see cref="T:Umbraco.Forms.Core.Persistence.Schema.DatabaseColumn"/> by column name,
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Providers.CollectionBuilderHelper">
            <summary>
            Provides methods for working with generic collections of providers (e.g. workflow types, field types).
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Providers.CollectionBuilderHelper.GetItemsWithHighestPriority``1(``0[])">
            <summary>
            Retrieves items from provided collection with highest priority.
            </summary>
            <typeparam name="T">Type of collection elements.</typeparam>
        </member>
        <member name="T:Umbraco.Forms.Core.Providers.DataSourceTypeCollection">
            <summary>
            Defines a custom collection for <see cref="T:Umbraco.Forms.Core.FormDataSourceType"/>.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Providers.DataSourceTypeCollection.#ctor(System.Func{System.Collections.Generic.IEnumerable{Umbraco.Forms.Core.FormDataSourceType}})">
            <summary>
            Initializes a new instance of the <see cref="T:Umbraco.Forms.Core.Providers.DataSourceTypeCollection"/> class.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Providers.DataSourceTypeCollection.Item(System.Guid)">
            <summary>
            Gets a <see cref="T:Umbraco.Forms.Core.FormDataSourceType"/> element from the collection.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Providers.DataSourceTypeCollectionBuilder">
            <summary>
            Builds a collection of type <see cref="T:Umbraco.Forms.Core.FormDataSourceType"/>.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Providers.DataSourceTypeCollectionBuilder.This">
            <inheritdoc/>
        </member>
        <member name="T:Umbraco.Forms.Core.Providers.ExportCollection">
            <summary>
            Defines a custom collection for <see cref="T:Umbraco.Forms.Core.ExportType"/>.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Providers.ExportCollection.#ctor(System.Func{System.Collections.Generic.IEnumerable{Umbraco.Forms.Core.ExportType}})">
            <summary>
            Initializes a new instance of the <see cref="T:Umbraco.Forms.Core.Providers.ExportCollection"/> class.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Providers.ExportCollection.Item(System.Guid)">
            <summary>
            Gets an <see cref="T:Umbraco.Forms.Core.ExportType"/> element from the collection.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Providers.ExportCollectionBuilder">
            <summary>
            Builds a collection of type <see cref="T:Umbraco.Forms.Core.ExportType"/>.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Providers.ExportCollectionBuilder.This">
            <inheritdoc/>
        </member>
        <member name="T:Umbraco.Forms.Core.Providers.FieldCollection">
            <summary>
            Defines a custom collection for <see cref="T:Umbraco.Forms.Core.FieldType"/>.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Providers.FieldCollection.#ctor(System.Func{System.Collections.Generic.IEnumerable{Umbraco.Forms.Core.FieldType}})">
            <summary>
            Initializes a new instance of the <see cref="T:Umbraco.Forms.Core.Providers.FieldCollection"/> class.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Providers.FieldCollection.Item(System.Guid)">
            <summary>
            Gets a <see cref="T:Umbraco.Forms.Core.FieldType"/> element from the collection.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Providers.FieldCollectionBuilder">
            <summary>
            Builds a collection of type <see cref="T:Umbraco.Forms.Core.FieldType"/>.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Providers.FieldCollectionBuilder.This">
            <inheritdoc/>
        </member>
        <member name="T:Umbraco.Forms.Core.Providers.FieldPreValueSourceCollection">
            <summary>
            Defines a custom collection for <see cref="T:Umbraco.Forms.Core.FieldPreValueSourceType"/>.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Providers.FieldPreValueSourceCollection.#ctor(System.Func{System.Collections.Generic.IEnumerable{Umbraco.Forms.Core.FieldPreValueSourceType}})">
            <summary>
            Initializes a new instance of the <see cref="T:Umbraco.Forms.Core.Providers.FieldPreValueSourceCollection"/> class.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Providers.FieldPreValueSourceCollection.Item(System.Guid)">
            <summary>
            Gets a <see cref="T:Umbraco.Forms.Core.FieldPreValueSourceType"/> element from the collection.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Providers.RecordSetActionCollection">
            <summary>
            Defines a custom collection for <see cref="T:Umbraco.Forms.Core.Models.RecordSetActionType"/>.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Providers.RecordSetActionCollection.#ctor(System.Func{System.Collections.Generic.IEnumerable{Umbraco.Forms.Core.Models.RecordSetActionType}})">
            <summary>
            Initializes a new instance of the <see cref="T:Umbraco.Forms.Core.Providers.RecordSetActionCollection"/> class.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Providers.RecordSetActionCollection.Item(System.Guid)">
            <summary>
            Gets a <see cref="T:Umbraco.Forms.Core.Models.RecordSetActionType"/> element from the collection.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Providers.RecordSetActionCollectionBuilder">
            <summary>
            Builds a collection of type <see cref="T:Umbraco.Forms.Core.Models.RecordSetActionType"/>.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Providers.RecordSetActionCollectionBuilder.This">
            <inheritdoc/>
        </member>
        <member name="T:Umbraco.Forms.Core.Providers.WorkflowCollection">
            <summary>
            Defines a custom collection for <see cref="T:Umbraco.Forms.Core.WorkflowType"/>.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Providers.WorkflowCollection.#ctor(System.Func{System.Collections.Generic.IEnumerable{Umbraco.Forms.Core.WorkflowType}})">
            <summary>
            Initializes a new instance of the <see cref="T:Umbraco.Forms.Core.Providers.WorkflowCollection"/> class.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Providers.WorkflowCollection.Item(System.Guid)">
            <summary>
            Gets a <see cref="T:Umbraco.Forms.Core.WorkflowType"/> element from the collection.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Providers.WorkflowCollectionBuilder">
            <summary>
            Builds a collection of type <see cref="T:Umbraco.Forms.Core.WorkflowType"/>.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Providers.WorkflowCollectionBuilder.This">
            <inheritdoc/>
        </member>
        <member name="T:Umbraco.Forms.Core.Searchers.EntrySearchResult">
            <summary>
            Defines a form entry search result.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Searchers.EntrySearchResult.Id">
            <summary>
            Gets or sets the result's Id.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Searchers.EntrySearchResult.Score">
            <summary>
            Gets or sets the result's score.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Searchers.EntrySearchResult.Form">
            <summary>
            Gets or sets the result's form.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Searchers.EntrySearchResult.State">
            <summary>
            Gets or sets the result's state.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Searchers.EntrySearchResult.Created">
            <summary>
            Gets or sets the result's created date.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Searchers.EntrySearchResult.Updated">
            <summary>
            Gets or sets the result's updated date.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Searchers.EntrySearchResult.UniqueId">
            <summary>
            Gets or sets the result's unique Id.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Searchers.EntrySearchResult.Fields">
            <summary>
            Gets or sets the result's fields.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Searchers.EntrySearchResult.Member">
            <summary>
            Gets or sets the result's member.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Searchers.EntrySearchResult.UmbracoPage">
            <summary>
            Gets or sets the result's Umbraco page from where the form was posted.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Searchers.EntrySearchResultCollection">
            <summary>
            Defines a form entry search result collection.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Searchers.EntrySearchResultCollection.TotalNumberOfResults">
            <summary>
            Gets or sets the total number of results.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Searchers.EntrySearchResultCollection.TotalNumberOfPages">
            <summary>
            Gets or sets the total number of pages.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Searchers.EntrySearchResultCollection.Schema">
            <summary>
            Gets or sets the schema.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Searchers.EntrySearchResultCollection.Results">
            <summary>
            Gets or sets the results.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Searchers.EntrySearchResultSchema">
            <summary>
            Defines a form entry search result schema.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Searchers.EntrySearchResultSchema.Name">
            <summary>
            Gets or sets the entry search result's field name.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Searchers.EntrySearchResultSchema.View">
            <summary>
            Gets or sets the entry search result's render view.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Searchers.EntrySearchResultSchema.EditView">
            <summary>
            Gets or sets the entry search result's edit view.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Searchers.EntrySearchResultSchema.Id">
            <summary>
            Gets or sets the entry search result's Id (field Id, or additional column such as 'member', 'state' etc).
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Searchers.EntrySearchResultSchema.ContainsSensitiveData">
            <summary>
            Gets or sets a value indicating whether the entry search result field contains sensitive data.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Searchers.EntrySearchResultSchema.ShowOnListingScreen">
            <summary>
            Gets or sets a value indicating whether the entry search result field should be shown on the listing screen in the back-office.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Searchers.FormRecordSearcher.QueryDataBaseForSubmissions(Umbraco.Forms.Core.Models.RecordFilter,System.Boolean)">
            <summary>
            Query the database for form records (submissions) based on the provided filter.
            </summary>
            <param name="model">The filter model of results to query.</param>
            <param name="enforceSensitiveData">
            By setting this to true, regardless of the current user permissions we will always not return the sensitive values.
            </param>
        </member>
        <member name="T:Umbraco.Forms.Core.Searchers.IFormRecordSearcher">
            <summary>
            Defines methods available for searching form records (submissions) in the database.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Searchers.IFormRecordSearcher.QueryDataBase(Umbraco.Forms.Core.Models.RecordFilter)">
            <summary>
            Query the database for form records (submissions) based on the provided filter.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Searchers.IFormRecordSearcher.BuildSqlQuery(Umbraco.Cms.Infrastructure.Scoping.IScope,Umbraco.Forms.Core.Models.RecordFilter,System.String)">
            <summary>
            Build the SQL query for form records (submissions) based on the provided filter.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.Searchers.UmbracoPageDetail">
            <summary>
            Defines a the Umbraco page detail for a form entry search result.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Searchers.UmbracoPageDetail.Id">
            <summary>
            Gets or sets the Umbraco page Id.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.Searchers.UmbracoPageDetail.Name">
            <summary>
            Gets or sets the Umbraco page name.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Security.FormsSecurity.HasAccessToForm(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Core.Security.FormsSecurity.FilterFormIdsForCurrentUser(System.Collections.Generic.IEnumerable{System.Guid})">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Core.Security.FormsSecurity.FilterFormIdsForUser(System.Collections.Generic.IEnumerable{System.Guid},Umbraco.Cms.Core.Models.Membership.IUser)">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Core.Security.FormsSecurity.EnsureUserExists(Umbraco.Cms.Core.Models.Membership.IUser)">
            <summary>
            Ensure that there's an entry in the UserSecurityStorage system for the user
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Security.FormsSecurity.CanCurrentUserManageWorkflows">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Core.Security.FormsSecurity.CanCurrentUserManageForms">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Core.Security.FormsSecurity.CanCurrentUserManageDataSources">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Core.Security.FormsSecurity.CanCurrentUserManagePreValues">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Core.Security.FormsSecurity.CanCurrentUserViewEntries">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Core.Security.FormsSecurity.CanCurrentUserEditEntries">
            <inheritdoc/>
        </member>
        <member name="T:Umbraco.Forms.Core.Security.IFormsSecurity">
            <summary>
            Defines security operations related to access to forms.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Security.IFormsSecurity.HasAccessToForm(System.Guid)">
            <summary>
            Checks if the current user has permission to access the provided form.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Security.IFormsSecurity.HasAccessToForm(System.Guid,Umbraco.Cms.Core.Models.Membership.IUser)">
            <summary>
            Checks if the provided user has permission to access the provided form.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Security.IFormsSecurity.CanCurrentUserManageWorkflows">
            <summary>
            Checks if the current user has permission to manage workflows.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Security.IFormsSecurity.CanCurrentUserManageForms">
            <summary>
            Checks if the current user has permission to manage forms.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Security.IFormsSecurity.CanUserManageForms(Umbraco.Cms.Core.Models.Membership.IUser)">
            <summary>
            Checks if the provided user has permission to manage forms.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Security.IFormsSecurity.CanCurrentUserManageDataSources">
            <summary>
            Checks if the current user has permission to manage datasources.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Security.IFormsSecurity.CanCurrentUserManagePreValues">
            <summary>
            Checks if the current user has permission to manage prevalues.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Security.IFormsSecurity.CanCurrentUserViewEntries">
            <summary>
            Checks if the current user has permission to view entries via the back-office.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Security.IFormsSecurity.CanCurrentUserEditEntries">
            <summary>
            Checks if the current user has permission to edit entries via the back-office.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Security.IFormsSecurity.FilterFormIdsForCurrentUser(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Filters a provided collection of form Ids for those the current user has access to.
            </summary>
            <param name="formIds">Collection of forms Ids to filter.</param>
            <returns>Filtered collection of form Ids.</returns>
        </member>
        <member name="M:Umbraco.Forms.Core.Security.IFormsSecurity.FilterFormIdsForUser(System.Collections.Generic.IEnumerable{System.Guid},Umbraco.Cms.Core.Models.Membership.IUser)">
            <summary>
            Filters a provided collection of form Ids for those the provided user has access to.
            </summary>
            <param name="formIds">Collection of forms Ids to filter.</param>
            <param name="user">The user.</param>
            <returns>Filtered collection of form Ids.</returns>
        </member>
        <member name="M:Umbraco.Forms.Core.Security.IFormsSecurity.GetStartFolderKeysForCurrentUser">
            <summary>
            Gets the start folder keys for the current user.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.Security.IFormsSecurity.GetStartFolderKeysForUser(Umbraco.Cms.Core.Models.Membership.IUser)">
            <summary>
            Gets the start folder keys for the specified user.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.WorkflowExecutionContext.#ctor(Umbraco.Forms.Core.Persistence.Dtos.Record,Umbraco.Forms.Core.Models.Form,Umbraco.Forms.Core.Enums.FormState)">
            <summary>
            Initializes a new instance of the <see cref="T:Umbraco.Forms.Core.WorkflowExecutionContext"/> class.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.WorkflowExecutionContext.State">
            <summary>
            Gets or sets the form state.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.WorkflowExecutionContext.Form">
            <summary>
            Gets or sets the associated form.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.WorkflowExecutionContext.Record">
            <summary>
            Gets or sets the associated record.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Core.WorkflowType">
            <summary>
            Abstract base type for workflow types.
            </summary>
        </member>
        <member name="P:Umbraco.Forms.Core.WorkflowType.Workflow">
            <summary>
            Gets the associated workflow.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.WorkflowType.ExecuteWorkflow(Umbraco.Forms.Core.WorkflowExecutionContext,Umbraco.Forms.Core.Interfaces.IWorkflow)">
            <summary>
            Performs Execution of the the workflow type having set the <see cref="P:Umbraco.Forms.Core.WorkflowType.Workflow"/> property to the provided workflow.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.WorkflowType.Execute(Umbraco.Forms.Core.WorkflowExecutionContext)">
            <summary>
            Executes the workflow type.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.WorkflowType.ValidateSettings">
            <summary>
            Validates the workflow type's settings.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.WorkflowType.LoadSettings(Umbraco.Forms.Core.Interfaces.IWorkflow)">
            <summary>
            Loads the workflow type's settings.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Core.WorkflowType.Settings">
            <summary>
            Gets the workflow type's settings.
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Data.FileSystem.FormsFileSystemForSavedData">
            <summary>
            A file system for storing form definitions.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Data.FileSystem.FormsFileSystemForSavedData.#ctor(Umbraco.Cms.Core.IO.IFileSystem)">
            <summary>
            Initializes a new instance of the <see cref="T:Umbraco.Forms.Data.FileSystem.FormsFileSystemForSavedData"/> class.
            </summary>
            <remarks>
            public so that FileSystemProviderManager can instanciate it,
            but do NOT use it in Forms, always let FileSystemProviderManager handle it
            </remarks>
        </member>
        <member name="P:Umbraco.Forms.Data.FileSystem.FormsFileSystemForSavedData.IsDefaultFileSystem">
             <summary>
             Gets a value indicating whether we are using the "default" filesystem (i.e. nothing was configured).
             </summary>
             <remarks>
             As *soon* as something is configured, even if it's configured to use a physical file
             system pointing to the default FormsStoragePath location, then all the cache refreshers
             will consider that a "custom file system" is in used and will *not* update files.
            
             Whether this is a good idea, or makes sense at all, is debatable, but we are not going
             to deal with it today
             </remarks>
        </member>
        <member name="T:Umbraco.Forms.Data.FileSystem.FormsFileSystemWrapper">
            <summary>
            A file system for storing form definitions.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Data.FileSystem.FormsFileSystemWrapper.#ctor(Umbraco.Cms.Core.IO.IFileSystem)">
            <summary>
            Initializes a new instance of the <see cref="!:FormsFileSystemForPackageData"/> class.
            </summary>
            <remarks>
            public so that FileSystemProviderManager can instantiate it,
            but do NOT use it in Forms, always let FileSystemProviderManager handle it
            </remarks>
        </member>
        <member name="T:Umbraco.Forms.Data.Storage.IFormTemplateStorage">
            <summary>
            Defines properties and methods for accessing form templates from storage.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.IFormTemplateStorage.GetAllTemplates">
            <summary>
            Gets all form templates.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.IFormTemplateStorage.GetTemplate(System.String)">
            <summary>
            Gets a single form template by alias.
            </summary>
            <param name="alias">Template alias.</param>
            <returns><see cref="T:Umbraco.Forms.Core.Models.Form"/> instance instantiated from template.</returns>
        </member>
        <member name="T:Umbraco.Forms.Data.Storage.IUserFormSecurityStorage">
            <summary>
            Defines properties and methods for managing user form security in storage.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.IUserFormSecurityStorage.GetAllUserFormSecurity(System.String)">
            <summary>
            This retrieves an Umbraco User backoffice's per form security.
            Form Security Settings for specific Forms that an Umbraco backoffice user has access to
            </summary>
            <param name="userId">Pass in the int based ID of the Umbraco Backoffice User</param>
            <returns>A list of <see cref="T:Umbraco.Forms.Core.Persistence.Dtos.UserFormSecurity"/> objects that defines per form specific permissions</returns>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.IUserFormSecurityStorage.GetUserFormSecurity(System.String,System.Guid)">
            <summary>
            Gets specific <see cref="T:Umbraco.Forms.Core.Persistence.Dtos.UserFormSecurity"/> for a specific user
            </summary>
            <param name="userId">Pass in the int based ID of the Umbraco Backoffic user</param>
            <param name="form">The Form Unique ID/GUID that you wish to select for this specific user</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Umbraco.Forms.Data.Storage.IUserFormSecurityStorage.InsertUserFormSecurity(Umbraco.Forms.Core.Persistence.Dtos.UserFormSecurity)" -->
        <member name="M:Umbraco.Forms.Data.Storage.IUserFormSecurityStorage.GetUserFormSecurityForAllUsers(System.Guid)">
            <summary>
            Gets a list of Umbraco backoffice users <see cref="T:Umbraco.Forms.Core.Persistence.Dtos.UserFormSecurity"/> for a specific Form ID
            </summary>
            <param name="form">The form ID to query</param>
            <returns>A list of UserFormSecurity for every umbraco backoffice user</returns>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.IUserFormSecurityStorage.DeleteUserFormSecurity(Umbraco.Forms.Core.Persistence.Dtos.UserFormSecurity)">
            <summary>
            Deletes a specific <see cref="T:Umbraco.Forms.Core.Persistence.Dtos.UserFormSecurity"/> for a specific Umbraco backoffice user
            </summary>
            <param name="formSecurity">The userFormSecurity object that you wish to delete from the Database</param>
            <returns>A boolean that indicates sucesfful deletion</returns>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.IUserFormSecurityStorage.DeleteAllUserFormSecurityForForm(System.Guid)">
            <summary>
            This performs a bulk delete of all <see cref="T:Umbraco.Forms.Core.Persistence.Dtos.UserFormSecurity"/> DB entries for a given form
            Used when deleting a form to ensure we do not leave behind orphan DB entries
            </summary>
            <param name="form">The form Guid that you wish to delete all DB entries for</param>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.IUserFormSecurityStorage.DeleteAllUserFormSecurityForUser(System.Int32)">
            <summary>
            This performs a bulk delete of all <see cref="T:Umbraco.Forms.Core.Persistence.Dtos.UserFormSecurity"/> DB entries for a given user.
            </summary>
            <param name="userId">The user Id</param>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.IUserFormSecurityStorage.UpdateUserFormSecurity(Umbraco.Forms.Core.Persistence.Dtos.UserFormSecurity)">
            <summary>
            Update a specific <see cref="T:Umbraco.Forms.Core.Persistence.Dtos.UserFormSecurity"/> entry in the Database
            Which an Umbraco backoffice user may have modified access to a specific form
            </summary>
            <param name="formSecurity">The <see cref="T:Umbraco.Forms.Core.Persistence.Dtos.UserFormSecurity"/> object with the modifications we wish to persist to the Database</param>
            <returns>The UserFormSecurity object we pass in</returns>
        </member>
        <member name="T:Umbraco.Forms.Data.Storage.IUserGroupFormSecurityStorage">
            <summary>
            Defines properties and methods for managing user group form security in storage.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.IUserGroupFormSecurityStorage.GetAllUserGroupFormSecurity(System.Int32)">
            <summary>
            This retrieves an Umbraco backoffice user group's per form security.
            Form Security Settings for specific Forms that an Umbraco backoffice user group has access to
            </summary>
            <param name="groupId">Pass in the int based ID of the Umbraco Backoffice User group</param>
            <returns>A list of <see cref="T:Umbraco.Forms.Core.Persistence.Dtos.UserGroupFormSecurity"/> objects that defines per form specific permissions</returns>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.IUserGroupFormSecurityStorage.GetAllUserGroupFormSecurity(System.Guid,System.Int32[])">
            <summary>
            This retrieves multiple Umbraco backoffice user group's per form security.
            Form Security Settings for specific Forms that an Umbraco backoffice user group has access to
            </summary>
            <param name="form">The Form Unique ID/GUID that you wish to select for this specific user</param>
            <param name="groupIds">Pass in the int based IDs of the Umbraco Backoffice User groups</param>
            <returns>A list of <see cref="T:Umbraco.Forms.Core.Persistence.Dtos.UserGroupFormSecurity"/> objects that defines per form specific permissions</returns>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.IUserGroupFormSecurityStorage.GetUserGroupFormSecurity(System.Int32,System.Guid)">
            <summary>
            Gets specific <see cref="T:Umbraco.Forms.Core.Persistence.Dtos.UserGroupFormSecurity"/> for a specific user group
            </summary>
            <param name="groupId">Pass in the int based ID of the Umbraco Backoffic user group</param>
            <param name="form">The Form Unique ID/GUID that you wish to select for this specific user</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Umbraco.Forms.Data.Storage.IUserGroupFormSecurityStorage.InsertUserGroupFormSecurity(Umbraco.Forms.Core.Persistence.Dtos.UserGroupFormSecurity)" -->
        <member name="M:Umbraco.Forms.Data.Storage.IUserGroupFormSecurityStorage.GetUserGroupFormSecurityForAllUsers(System.Guid)">
            <summary>
            Gets a list of Umbraco backoffice <see cref="T:Umbraco.Forms.Core.Persistence.Dtos.UserGroupFormSecurity"/> for a specific Form ID
            </summary>
            <param name="form">The form ID to query</param>
            <returns>A list of UserGroupFormSecurity for every umbraco backoffice user</returns>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.IUserGroupFormSecurityStorage.DeleteUserGroupFormSecurity(Umbraco.Forms.Core.Persistence.Dtos.UserGroupFormSecurity)">
            <summary>
            Deletes a specific <see cref="T:Umbraco.Forms.Core.Persistence.Dtos.UserGroupFormSecurity"/> for a specific Umbraco backoffice user group
            </summary>
            <param name="formSecurity">The UserGroupFormSecurity object that you wish to delete from the Database</param>
            <returns>A boolean that indicates sucesfful deletion</returns>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.IUserGroupFormSecurityStorage.DeleteAllUserGroupFormSecurityForForm(System.Guid)">
            <summary>
            This performs a bulk delete of all <see cref="T:Umbraco.Forms.Core.Persistence.Dtos.UserGroupFormSecurity"/> DB entries for a given form
            Used when deleting a form to ensure we do not leave behind orphan DB entries
            </summary>
            <param name="form">The form Guid that you wish to delete all DB entries for</param>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.IUserGroupFormSecurityStorage.UpdateUserGroupFormSecurity(Umbraco.Forms.Core.Persistence.Dtos.UserGroupFormSecurity)">
            <summary>
            Update a specific <see cref="T:Umbraco.Forms.Core.Persistence.Dtos.UserGroupFormSecurity"/> entry in the Database
            Which an Umbraco backoffice user group may have modified access to a specific form
            </summary>
            <param name="formSecurity">The <see cref="T:Umbraco.Forms.Core.Persistence.Dtos.UserGroupFormSecurity"/> object with the modifications we wish to persist to the Database</param>
            <returns>The UserGroupFormSecurity object we pass in</returns>
        </member>
        <member name="T:Umbraco.Forms.Data.Storage.IUserGroupSecurityStorage">
            <summary>
            Defines properties and methods for managing user security in storage.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.IUserGroupSecurityStorage.GetAllUserGroupSecurity(System.Int32[])">
            <summary>
            Get the generic <see cref="T:Umbraco.Forms.Core.Persistence.Dtos.UserGroupSecurity"/> objects for a specific set of Umbraco backoffice user groups.
            </summary>
            <param name="groupIds">Umbraco backoffice user group ids to fetch the <see cref="T:Umbraco.Forms.Core.Persistence.Dtos.UserGroupSecurity"/> records for.</param>
            <returns>A list of UserSecurity objects returned from the database</returns>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.IUserGroupSecurityStorage.GetUserGroupSecurity(System.Int32)">
            <summary>
            Get the generic <see cref="T:Umbraco.Forms.Core.Persistence.Dtos.UserGroupSecurity"/> object for a specific Umbraco backoffice user group.
            </summary>
            <param name="groupId">An Umbraco backoffice user group id to fetch the <see cref="T:Umbraco.Forms.Core.Persistence.Dtos.UserGroupSecurity"/></param>
            <returns>A list of UserSecurity objects returned from the database</returns>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.IUserGroupSecurityStorage.InsertUserGroupSecurity(Umbraco.Forms.Core.Persistence.Dtos.UserGroupSecurity)">
            <summary>
            Add/Insert a new <see cref="T:Umbraco.Forms.Core.Persistence.Dtos.UserGroupSecurity"/> object into the database
            This tracks what generic Form permissions for all forms for a specific Umbraco backoffice user group
            </summary>
            <returns>The UserSecurity object we pass in</returns>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.IUserGroupSecurityStorage.DeleteUserGroupSecurity(Umbraco.Forms.Core.Persistence.Dtos.UserGroupSecurity)">
            <summary>
            Delete a specific <see cref="T:Umbraco.Forms.Core.Persistence.Dtos.UserSecurity"/> object from the database
            Using this will remove the generic entry for that Umbraco backoffice user group
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.IUserGroupSecurityStorage.UpdateUserGroupSecurity(Umbraco.Forms.Core.Persistence.Dtos.UserGroupSecurity)">
            <summary>
            Updates a specific <see cref="T:Umbraco.Forms.Core.Persistence.Dtos.UserSecurity"/> object in the database
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Data.Storage.IUserGroupStartFolderStorage">
            <summary>
            Defines properties and methods for managing user group start folders
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.IUserGroupStartFolderStorage.GetStartFolderKeys(System.Int32)">
            <summary>
            Get the keys identifying the start folders for a user group.
            </summary>
            <param name="userGroupId">An Umbraco backofficer user group id.</param>
            <returns>A list of folder keys.</returns>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.IUserGroupStartFolderStorage.UpdateStartFolders(System.Int32,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Updates a specific UserSecurity object in the database
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Data.Storage.IUserSecurityStorage">
            <summary>
            Defines properties and methods for managing user security in storage.
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.IUserSecurityStorage.GetAllUserSecurity">
            <summary>
            Get the generic UserSecurity object for all users that have one stored.
            </summary>
            <returns>A list of UserSecurity objects returned from the database</returns>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.IUserSecurityStorage.GetUserSecurity(System.Int32)">
            <summary>
            Get the generic <see cref="T:Umbraco.Forms.Core.Persistence.Dtos.UserSecurity"/> object for a specific Umbraco backoffice user.
            </summary>
            <param name="userId">An Umbraco backofficer user id to fetch the UserSecurity</param>
            <returns>A list of UserSecurity objects returned from the database</returns>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.IUserSecurityStorage.InsertUserSecurity(Umbraco.Forms.Core.Persistence.Dtos.UserSecurity)">
            <summary>
            Add/Insert a new <see cref="T:Umbraco.Forms.Core.Persistence.Dtos.UserSecurity"/> object into the database
            This tracks what generic Form permissions for all forms for a specific Umbraco backoffice user
            </summary>
            <returns>The UserSecurity object we pass in</returns>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.IUserSecurityStorage.DeleteUserSecurity(Umbraco.Forms.Core.Persistence.Dtos.UserSecurity)">
            <summary>
            Delete a specific <see cref="T:Umbraco.Forms.Core.Persistence.Dtos.UserSecurity"/> object from the database
            Using this will remove the generic entry for that Umbraco backoffice user
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.IUserSecurityStorage.UpdateUserSecurity(Umbraco.Forms.Core.Persistence.Dtos.UserSecurity)">
            <summary>
            Updates a specific <see cref="T:Umbraco.Forms.Core.Persistence.Dtos.UserSecurity"/> object in the database
            </summary>
        </member>
        <member name="T:Umbraco.Forms.Data.Storage.IUserStartFolderStorage">
            <summary>
            Defines properties and methods for managing user start folders
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.IUserStartFolderStorage.GetStartFolderKeys(System.Int32)">
            <summary>
            Get the keys identifying the start folders for a user.
            </summary>
            <param name="userId">An Umbraco backofficer user id.</param>
            <returns>A list of folder keys.</returns>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.IUserStartFolderStorage.UpdateStartFolders(System.Int32,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Updates a specific UserSecurity object in the database
            </summary>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.UserFormSecurityStorage.GetAllUserFormSecurity(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.UserFormSecurityStorage.GetUserFormSecurity(System.String,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.UserFormSecurityStorage.InsertUserFormSecurity(Umbraco.Forms.Core.Persistence.Dtos.UserFormSecurity)">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.UserFormSecurityStorage.GetUserFormSecurityForAllUsers(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.UserFormSecurityStorage.DeleteUserFormSecurity(Umbraco.Forms.Core.Persistence.Dtos.UserFormSecurity)">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.UserFormSecurityStorage.DeleteAllUserFormSecurityForForm(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.UserFormSecurityStorage.DeleteAllUserFormSecurityForUser(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.UserFormSecurityStorage.UpdateUserFormSecurity(Umbraco.Forms.Core.Persistence.Dtos.UserFormSecurity)">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.UserGroupFormSecurityStorage.GetAllUserGroupFormSecurity(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.UserGroupFormSecurityStorage.GetAllUserGroupFormSecurity(System.Guid,System.Int32[])">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.UserGroupFormSecurityStorage.GetUserGroupFormSecurity(System.Int32,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.UserGroupFormSecurityStorage.InsertUserGroupFormSecurity(Umbraco.Forms.Core.Persistence.Dtos.UserGroupFormSecurity)">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.UserGroupFormSecurityStorage.GetUserGroupFormSecurityForAllUsers(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.UserGroupFormSecurityStorage.DeleteUserGroupFormSecurity(Umbraco.Forms.Core.Persistence.Dtos.UserGroupFormSecurity)">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.UserGroupFormSecurityStorage.DeleteAllUserGroupFormSecurityForForm(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.UserGroupFormSecurityStorage.UpdateUserGroupFormSecurity(Umbraco.Forms.Core.Persistence.Dtos.UserGroupFormSecurity)">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.UserGroupSecurityStorage.GetAllUserGroupSecurity(System.Int32[])">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.UserGroupSecurityStorage.GetUserGroupSecurity(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.UserGroupSecurityStorage.InsertUserGroupSecurity(Umbraco.Forms.Core.Persistence.Dtos.UserGroupSecurity)">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.UserGroupSecurityStorage.DeleteUserGroupSecurity(Umbraco.Forms.Core.Persistence.Dtos.UserGroupSecurity)">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.UserSecurityStorage.GetAllUserSecurity">
            <inheritdoc/>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.UserSecurityStorage.GetUserSecurity(System.Int32)">
            <summary>
            Get the generic UserSecurity object for a specific Umbraco backoffice user
            </summary>
            <param name="userId">An Umbraco backofficer user id to fetch the UserSecurity</param>
            <returns>A list of UserSecurity objects returned from the database</returns>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.UserSecurityStorage.InsertUserSecurity(Umbraco.Forms.Core.Persistence.Dtos.UserSecurity)">
            <summary>
            Add/Insert a new UserSecurity object into the database
            This tracks what generic Form permissions for all forms for a specific Umbraco backoffice user
            </summary>
            <returns>The UserSecurity object we pass in</returns>
        </member>
        <member name="M:Umbraco.Forms.Data.Storage.UserSecurityStorage.DeleteUserSecurity(Umbraco.Forms.Core.Persistence.Dtos.UserSecurity)">
            <summary>
            Delete a specific UserSecurity object from the database
            Using this will remove the generic entry for that Umbraco backoffice user
            </summary>
        </member>
    </members>
</doc>
